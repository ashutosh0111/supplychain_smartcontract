{
	"id": "69220694fdf3b39814185fcc5bdbf468",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"Contracts/Ownership/Ownable.sol": {
				"content": "\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\nimport \"../Utils/Context.sol\";\r\n\r\n// By default, the owner account will be the one that deploys the contract.\r\n// This * can later be changed with {transferOwnership}.\r\n\r\ncontract Ownable is Context {\r\n    address private _owner;\r\n\r\n    // Define an Event\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    /// Assign the contract to an owner\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /// Look up the address of the owner\r\n    function ownerLookup() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /// Define a function modifier 'onlyOwner'\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    //   Returns the address of the current owner.\r\n    function isOwner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /// Check if the calling address is the owner of the contract\r\n    function _checkOwner() internal view virtual {\r\n        require(_msgSender() == isOwner(), \"Ownable: caller is not the owner\");\r\n    }\r\n\r\n    /// Define a function to renounce ownerhip\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /// Define a public function to transfer ownership\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(\r\n            newOwner != address(0),\r\n            \"Ownable: new owner is the zero address\"\r\n        );\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /// Define an internal function to transfer ownership\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}"
			},
			"Contracts/Utils/Context.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity ^0.8.0;\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Contracts/Ownership/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ownerLookup",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Contracts/Ownership/Ownable.sol\":231:1880  contract Ownable is Context {... */\n  mstore(0x40, 0x80)\n    /* \"Contracts/Ownership/Ownable.sol\":479:544  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Contracts/Ownership/Ownable.sol\":504:536  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"Contracts/Ownership/Ownable.sol\":523:535  _msgSender() */\n  tag_5\n    /* \"Contracts/Ownership/Ownable.sol\":523:533  _msgSender */\n  shl(0x20, tag_6)\n    /* \"Contracts/Ownership/Ownable.sol\":523:535  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"Contracts/Ownership/Ownable.sol\":504:522  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"Contracts/Ownership/Ownable.sol\":504:536  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"Contracts/Ownership/Ownable.sol\":231:1880  contract Ownable is Context {... */\n  jump(tag_8)\n    /* \"Contracts/Utils/Context.sol\":97:195  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"Contracts/Utils/Context.sol\":150:157  address */\n  0x00\n    /* \"Contracts/Utils/Context.sol\":177:187  msg.sender */\n  caller\n    /* \"Contracts/Utils/Context.sol\":170:187  return msg.sender */\n  swap1\n  pop\n    /* \"Contracts/Utils/Context.sol\":97:195  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"Contracts/Ownership/Ownable.sol\":1686:1877  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"Contracts/Ownership/Ownable.sol\":1760:1776  address oldOwner */\n  0x00\n    /* \"Contracts/Ownership/Ownable.sol\":1779:1785  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Contracts/Ownership/Ownable.sol\":1760:1785  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"Contracts/Ownership/Ownable.sol\":1805:1813  newOwner */\n  dup2\n    /* \"Contracts/Ownership/Ownable.sol\":1796:1802  _owner */\n  0x00\n  dup1\n    /* \"Contracts/Ownership/Ownable.sol\":1796:1813  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Contracts/Ownership/Ownable.sol\":1860:1868  newOwner */\n  dup2\n    /* \"Contracts/Ownership/Ownable.sol\":1829:1869  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Contracts/Ownership/Ownable.sol\":1850:1858  oldOwner */\n  dup2\n    /* \"Contracts/Ownership/Ownable.sol\":1829:1869  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"Contracts/Ownership/Ownable.sol\":1749:1877  {... */\n  pop\n    /* \"Contracts/Ownership/Ownable.sol\":1686:1877  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"Contracts/Ownership/Ownable.sol\":231:1880  contract Ownable is Context {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contracts/Ownership/Ownable.sol\":231:1880  contract Ownable is Context {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe02e64ea\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Contracts/Ownership/Ownable.sol\":1214:1317  function renounceOwnership() public virtual onlyOwner {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"Contracts/Ownership/Ownable.sol\":860:949  function isOwner() public view virtual returns (address) {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/Ownership/Ownable.sol\":594:679  function ownerLookup() public view returns (address) {... */\n    tag_5:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/Ownership/Ownable.sol\":1381:1619  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_6:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      stop\n        /* \"Contracts/Ownership/Ownable.sol\":1214:1317  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n        /* \"Contracts/Ownership/Ownable.sol\":767:780  _checkOwner() */\n      tag_21\n        /* \"Contracts/Ownership/Ownable.sol\":767:778  _checkOwner */\n      tag_22\n        /* \"Contracts/Ownership/Ownable.sol\":767:780  _checkOwner() */\n      jump\t// in\n    tag_21:\n        /* \"Contracts/Ownership/Ownable.sol\":1279:1309  _transferOwnership(address(0)) */\n      tag_24\n        /* \"Contracts/Ownership/Ownable.sol\":1306:1307  0 */\n      0x00\n        /* \"Contracts/Ownership/Ownable.sol\":1279:1297  _transferOwnership */\n      tag_25\n        /* \"Contracts/Ownership/Ownable.sol\":1279:1309  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_24:\n        /* \"Contracts/Ownership/Ownable.sol\":1214:1317  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Contracts/Ownership/Ownable.sol\":860:949  function isOwner() public view virtual returns (address) {... */\n    tag_10:\n        /* \"Contracts/Ownership/Ownable.sol\":908:915  address */\n      0x00\n        /* \"Contracts/Ownership/Ownable.sol\":935:941  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/Ownership/Ownable.sol\":928:941  return _owner */\n      swap1\n      pop\n        /* \"Contracts/Ownership/Ownable.sol\":860:949  function isOwner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Contracts/Ownership/Ownable.sol\":594:679  function ownerLookup() public view returns (address) {... */\n    tag_14:\n        /* \"Contracts/Ownership/Ownable.sol\":638:645  address */\n      0x00\n        /* \"Contracts/Ownership/Ownable.sol\":665:671  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/Ownership/Ownable.sol\":658:671  return _owner */\n      swap1\n      pop\n        /* \"Contracts/Ownership/Ownable.sol\":594:679  function ownerLookup() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Contracts/Ownership/Ownable.sol\":1381:1619  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n        /* \"Contracts/Ownership/Ownable.sol\":767:780  _checkOwner() */\n      tag_29\n        /* \"Contracts/Ownership/Ownable.sol\":767:778  _checkOwner */\n      tag_22\n        /* \"Contracts/Ownership/Ownable.sol\":767:780  _checkOwner() */\n      jump\t// in\n    tag_29:\n        /* \"Contracts/Ownership/Ownable.sol\":1504:1505  0 */\n      0x00\n        /* \"Contracts/Ownership/Ownable.sol\":1484:1506  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/Ownership/Ownable.sol\":1484:1492  newOwner */\n      dup2\n        /* \"Contracts/Ownership/Ownable.sol\":1484:1506  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Contracts/Ownership/Ownable.sol\":1462:1572  require(... */\n      tag_31\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_32\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_31:\n        /* \"Contracts/Ownership/Ownable.sol\":1583:1611  _transferOwnership(newOwner) */\n      tag_34\n        /* \"Contracts/Ownership/Ownable.sol\":1602:1610  newOwner */\n      dup2\n        /* \"Contracts/Ownership/Ownable.sol\":1583:1601  _transferOwnership */\n      tag_25\n        /* \"Contracts/Ownership/Ownable.sol\":1583:1611  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_34:\n        /* \"Contracts/Ownership/Ownable.sol\":1381:1619  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Contracts/Ownership/Ownable.sol\":1024:1158  function _checkOwner() internal view virtual {... */\n    tag_22:\n        /* \"Contracts/Ownership/Ownable.sol\":1104:1113  isOwner() */\n      tag_36\n        /* \"Contracts/Ownership/Ownable.sol\":1104:1111  isOwner */\n      tag_10\n        /* \"Contracts/Ownership/Ownable.sol\":1104:1113  isOwner() */\n      jump\t// in\n    tag_36:\n        /* \"Contracts/Ownership/Ownable.sol\":1088:1113  _msgSender() == isOwner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/Ownership/Ownable.sol\":1088:1100  _msgSender() */\n      tag_37\n        /* \"Contracts/Ownership/Ownable.sol\":1088:1098  _msgSender */\n      tag_38\n        /* \"Contracts/Ownership/Ownable.sol\":1088:1100  _msgSender() */\n      jump\t// in\n    tag_37:\n        /* \"Contracts/Ownership/Ownable.sol\":1088:1113  _msgSender() == isOwner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Contracts/Ownership/Ownable.sol\":1080:1150  require(_msgSender() == isOwner(), \"Ownable: caller is not the owner\") */\n      tag_39\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_40\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_39:\n        /* \"Contracts/Ownership/Ownable.sol\":1024:1158  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"Contracts/Ownership/Ownable.sol\":1686:1877  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_25:\n        /* \"Contracts/Ownership/Ownable.sol\":1760:1776  address oldOwner */\n      0x00\n        /* \"Contracts/Ownership/Ownable.sol\":1779:1785  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/Ownership/Ownable.sol\":1760:1785  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"Contracts/Ownership/Ownable.sol\":1805:1813  newOwner */\n      dup2\n        /* \"Contracts/Ownership/Ownable.sol\":1796:1802  _owner */\n      0x00\n      dup1\n        /* \"Contracts/Ownership/Ownable.sol\":1796:1813  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Contracts/Ownership/Ownable.sol\":1860:1868  newOwner */\n      dup2\n        /* \"Contracts/Ownership/Ownable.sol\":1829:1869  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/Ownership/Ownable.sol\":1850:1858  oldOwner */\n      dup2\n        /* \"Contracts/Ownership/Ownable.sol\":1829:1869  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Contracts/Ownership/Ownable.sol\":1749:1877  {... */\n      pop\n        /* \"Contracts/Ownership/Ownable.sol\":1686:1877  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"Contracts/Utils/Context.sol\":97:195  function _msgSender() internal view virtual returns (address) {... */\n    tag_38:\n        /* \"Contracts/Utils/Context.sol\":150:157  address */\n      0x00\n        /* \"Contracts/Utils/Context.sol\":177:187  msg.sender */\n      caller\n        /* \"Contracts/Utils/Context.sol\":170:187  return msg.sender */\n      swap1\n      pop\n        /* \"Contracts/Utils/Context.sol\":97:195  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_44:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_45:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_60\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_44\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_46:\n        /* \"#utility.yul\":328:352   */\n      tag_62\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_45\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_12:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_64\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_46\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":674:791   */\n    tag_48:\n        /* \"#utility.yul\":783:784   */\n      0x00\n        /* \"#utility.yul\":780:781   */\n      dup1\n        /* \"#utility.yul\":773:785   */\n      revert\n        /* \"#utility.yul\":920:1042   */\n    tag_50:\n        /* \"#utility.yul\":993:1017   */\n      tag_69\n        /* \"#utility.yul\":1011:1016   */\n      dup2\n        /* \"#utility.yul\":993:1017   */\n      tag_45\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":986:991   */\n      dup2\n        /* \"#utility.yul\":983:1018   */\n      eq\n        /* \"#utility.yul\":973:1036   */\n      tag_70\n      jumpi\n        /* \"#utility.yul\":1032:1033   */\n      0x00\n        /* \"#utility.yul\":1029:1030   */\n      dup1\n        /* \"#utility.yul\":1022:1034   */\n      revert\n        /* \"#utility.yul\":973:1036   */\n    tag_70:\n        /* \"#utility.yul\":920:1042   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1048:1187   */\n    tag_51:\n        /* \"#utility.yul\":1094:1099   */\n      0x00\n        /* \"#utility.yul\":1132:1138   */\n      dup2\n        /* \"#utility.yul\":1119:1139   */\n      calldataload\n        /* \"#utility.yul\":1110:1139   */\n      swap1\n      pop\n        /* \"#utility.yul\":1148:1181   */\n      tag_72\n        /* \"#utility.yul\":1175:1180   */\n      dup2\n        /* \"#utility.yul\":1148:1181   */\n      tag_50\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1048:1187   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1193:1522   */\n    tag_18:\n        /* \"#utility.yul\":1252:1258   */\n      0x00\n        /* \"#utility.yul\":1301:1303   */\n      0x20\n        /* \"#utility.yul\":1289:1298   */\n      dup3\n        /* \"#utility.yul\":1280:1287   */\n      dup5\n        /* \"#utility.yul\":1276:1299   */\n      sub\n        /* \"#utility.yul\":1272:1304   */\n      slt\n        /* \"#utility.yul\":1269:1388   */\n      iszero\n      tag_74\n      jumpi\n        /* \"#utility.yul\":1307:1386   */\n      tag_75\n      tag_48\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":1269:1388   */\n    tag_74:\n        /* \"#utility.yul\":1427:1428   */\n      0x00\n        /* \"#utility.yul\":1452:1505   */\n      tag_76\n        /* \"#utility.yul\":1497:1504   */\n      dup5\n        /* \"#utility.yul\":1488:1494   */\n      dup3\n        /* \"#utility.yul\":1477:1486   */\n      dup6\n        /* \"#utility.yul\":1473:1495   */\n      add\n        /* \"#utility.yul\":1452:1505   */\n      tag_51\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1442:1505   */\n      swap2\n      pop\n        /* \"#utility.yul\":1398:1515   */\n      pop\n        /* \"#utility.yul\":1193:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1528:1697   */\n    tag_52:\n        /* \"#utility.yul\":1612:1623   */\n      0x00\n        /* \"#utility.yul\":1646:1652   */\n      dup3\n        /* \"#utility.yul\":1641:1644   */\n      dup3\n        /* \"#utility.yul\":1634:1653   */\n      mstore\n        /* \"#utility.yul\":1686:1690   */\n      0x20\n        /* \"#utility.yul\":1681:1684   */\n      dup3\n        /* \"#utility.yul\":1677:1691   */\n      add\n        /* \"#utility.yul\":1662:1691   */\n      swap1\n      pop\n        /* \"#utility.yul\":1528:1697   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1703:1928   */\n    tag_53:\n        /* \"#utility.yul\":1843:1877   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":1839:1840   */\n      0x00\n        /* \"#utility.yul\":1831:1837   */\n      dup3\n        /* \"#utility.yul\":1827:1841   */\n      add\n        /* \"#utility.yul\":1820:1878   */\n      mstore\n        /* \"#utility.yul\":1912:1920   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1907:1909   */\n      0x20\n        /* \"#utility.yul\":1899:1905   */\n      dup3\n        /* \"#utility.yul\":1895:1910   */\n      add\n        /* \"#utility.yul\":1888:1921   */\n      mstore\n        /* \"#utility.yul\":1703:1928   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1934:2300   */\n    tag_54:\n        /* \"#utility.yul\":2076:2079   */\n      0x00\n        /* \"#utility.yul\":2097:2164   */\n      tag_80\n        /* \"#utility.yul\":2161:2163   */\n      0x26\n        /* \"#utility.yul\":2156:2159   */\n      dup4\n        /* \"#utility.yul\":2097:2164   */\n      tag_52\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2090:2164   */\n      swap2\n      pop\n        /* \"#utility.yul\":2173:2266   */\n      tag_81\n        /* \"#utility.yul\":2262:2265   */\n      dup3\n        /* \"#utility.yul\":2173:2266   */\n      tag_53\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":2291:2293   */\n      0x40\n        /* \"#utility.yul\":2286:2289   */\n      dup3\n        /* \"#utility.yul\":2282:2294   */\n      add\n        /* \"#utility.yul\":2275:2294   */\n      swap1\n      pop\n        /* \"#utility.yul\":1934:2300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2306:2725   */\n    tag_33:\n        /* \"#utility.yul\":2472:2476   */\n      0x00\n        /* \"#utility.yul\":2510:2512   */\n      0x20\n        /* \"#utility.yul\":2499:2508   */\n      dup3\n        /* \"#utility.yul\":2495:2513   */\n      add\n        /* \"#utility.yul\":2487:2513   */\n      swap1\n      pop\n        /* \"#utility.yul\":2559:2568   */\n      dup2\n        /* \"#utility.yul\":2553:2557   */\n      dup2\n        /* \"#utility.yul\":2549:2569   */\n      sub\n        /* \"#utility.yul\":2545:2546   */\n      0x00\n        /* \"#utility.yul\":2534:2543   */\n      dup4\n        /* \"#utility.yul\":2530:2547   */\n      add\n        /* \"#utility.yul\":2523:2570   */\n      mstore\n        /* \"#utility.yul\":2587:2718   */\n      tag_83\n        /* \"#utility.yul\":2713:2717   */\n      dup2\n        /* \"#utility.yul\":2587:2718   */\n      tag_54\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":2579:2718   */\n      swap1\n      pop\n        /* \"#utility.yul\":2306:2725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2731:2913   */\n    tag_55:\n        /* \"#utility.yul\":2871:2905   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":2867:2868   */\n      0x00\n        /* \"#utility.yul\":2859:2865   */\n      dup3\n        /* \"#utility.yul\":2855:2869   */\n      add\n        /* \"#utility.yul\":2848:2906   */\n      mstore\n        /* \"#utility.yul\":2731:2913   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2919:3285   */\n    tag_56:\n        /* \"#utility.yul\":3061:3064   */\n      0x00\n        /* \"#utility.yul\":3082:3149   */\n      tag_86\n        /* \"#utility.yul\":3146:3148   */\n      0x20\n        /* \"#utility.yul\":3141:3144   */\n      dup4\n        /* \"#utility.yul\":3082:3149   */\n      tag_52\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":3075:3149   */\n      swap2\n      pop\n        /* \"#utility.yul\":3158:3251   */\n      tag_87\n        /* \"#utility.yul\":3247:3250   */\n      dup3\n        /* \"#utility.yul\":3158:3251   */\n      tag_55\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":3276:3278   */\n      0x20\n        /* \"#utility.yul\":3271:3274   */\n      dup3\n        /* \"#utility.yul\":3267:3279   */\n      add\n        /* \"#utility.yul\":3260:3279   */\n      swap1\n      pop\n        /* \"#utility.yul\":2919:3285   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3291:3710   */\n    tag_41:\n        /* \"#utility.yul\":3457:3461   */\n      0x00\n        /* \"#utility.yul\":3495:3497   */\n      0x20\n        /* \"#utility.yul\":3484:3493   */\n      dup3\n        /* \"#utility.yul\":3480:3498   */\n      add\n        /* \"#utility.yul\":3472:3498   */\n      swap1\n      pop\n        /* \"#utility.yul\":3544:3553   */\n      dup2\n        /* \"#utility.yul\":3538:3542   */\n      dup2\n        /* \"#utility.yul\":3534:3554   */\n      sub\n        /* \"#utility.yul\":3530:3531   */\n      0x00\n        /* \"#utility.yul\":3519:3528   */\n      dup4\n        /* \"#utility.yul\":3515:3532   */\n      add\n        /* \"#utility.yul\":3508:3555   */\n      mstore\n        /* \"#utility.yul\":3572:3703   */\n      tag_89\n        /* \"#utility.yul\":3698:3702   */\n      dup2\n        /* \"#utility.yul\":3572:3703   */\n      tag_56\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":3564:3703   */\n      swap1\n      pop\n        /* \"#utility.yul\":3291:3710   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f09c1ec534fea97623c45d67d8f88e9c97643846087e414a9b4a502f66c3b34664736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_22": {
									"entryPoint": null,
									"id": 22,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_130": {
									"entryPoint": 50,
									"id": 130,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_118": {
									"entryPoint": 58,
									"id": 118,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6104e58061010d6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638f32d59b1461005b578063e02e64ea14610079578063f2fde38b14610097575b600080fd5b6100596100b3565b005b6100636100c7565b6040516100709190610327565b60405180910390f35b6100816100f0565b60405161008e9190610327565b60405180910390f35b6100b160048036038101906100ac9190610373565b610119565b005b6100bb61019c565b6100c5600061021a565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61012161019c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610190576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018790610423565b60405180910390fd5b6101998161021a565b50565b6101a46100c7565b73ffffffffffffffffffffffffffffffffffffffff166101c26102de565b73ffffffffffffffffffffffffffffffffffffffff1614610218576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020f9061048f565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610311826102e6565b9050919050565b61032181610306565b82525050565b600060208201905061033c6000830184610318565b92915050565b600080fd5b61035081610306565b811461035b57600080fd5b50565b60008135905061036d81610347565b92915050565b60006020828403121561038957610388610342565b5b60006103978482850161035e565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061040d6026836103a0565b9150610418826103b1565b604082019050919050565b6000602082019050818103600083015261043c81610400565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006104796020836103a0565b915061048482610443565b602082019050919050565b600060208201905081810360008301526104a88161046c565b905091905056fea2646970667358221220f09c1ec534fea97623c45d67d8f88e9c97643846087e414a9b4a502f66c3b34664736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x4E5 DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xE02E64EA EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x97 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xB3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x63 PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x327 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x81 PUSH2 0xF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x327 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x373 JUMP JUMPDEST PUSH2 0x119 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBB PUSH2 0x19C JUMP JUMPDEST PUSH2 0xC5 PUSH1 0x0 PUSH2 0x21A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x121 PUSH2 0x19C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x190 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x187 SWAP1 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x199 DUP2 PUSH2 0x21A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A4 PUSH2 0xC7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C2 PUSH2 0x2DE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x218 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20F SWAP1 PUSH2 0x48F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x311 DUP3 PUSH2 0x2E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x321 DUP2 PUSH2 0x306 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x318 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x350 DUP2 PUSH2 0x306 JUMP JUMPDEST DUP2 EQ PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x36D DUP2 PUSH2 0x347 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x389 JUMPI PUSH2 0x388 PUSH2 0x342 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x397 DUP5 DUP3 DUP6 ADD PUSH2 0x35E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40D PUSH1 0x26 DUP4 PUSH2 0x3A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x418 DUP3 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x43C DUP2 PUSH2 0x400 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x479 PUSH1 0x20 DUP4 PUSH2 0x3A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x484 DUP3 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A8 DUP2 PUSH2 0x46C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE SWAP13 0x1E 0xC5 CALLVALUE INVALID 0xA9 PUSH23 0x23C45D67D8F88E9C97643846087E414A9B4A502F66C3B3 CHAINID PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "231:1649:0:-:0;;;479:65;;;;;;;;;;504:32;523:12;:10;;;:12;;:::i;:::-;504:18;;;:32;;:::i;:::-;231:1649;;97:98:1;150:7;177:10;170:17;;97:98;:::o;1686:191:0:-;1760:16;1779:6;;;;;;;;;;;1760:25;;1805:8;1796:6;;:17;;;;;;;;;;;;;;;;;;1860:8;1829:40;;1850:8;1829:40;;;;;;;;;;;;1749:128;1686:191;:::o;231:1649::-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_61": {
									"entryPoint": 412,
									"id": 61,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_130": {
									"entryPoint": 734,
									"id": 130,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_118": {
									"entryPoint": 538,
									"id": 118,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isOwner_47": {
									"entryPoint": 199,
									"id": 47,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerLookup_31": {
									"entryPoint": 240,
									"id": 31,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_75": {
									"entryPoint": 179,
									"id": 75,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_98": {
									"entryPoint": 281,
									"id": 98,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1132,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1059,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 774,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 834,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 1091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3713:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:2",
														"type": ""
													}
												],
												"src": "7:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:2",
														"type": ""
													}
												],
												"src": "139:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:2",
														"type": ""
													}
												],
												"src": "241:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:2",
														"type": ""
													}
												],
												"src": "365:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "633:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "643:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "659:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "653:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "653:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "626:6:2",
														"type": ""
													}
												],
												"src": "593:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "763:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "780:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "783:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "773:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "773:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "674:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "903:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "906:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "896:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "896:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "797:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "963:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1020:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1029:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1022:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1022:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1022:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "986:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1011:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "993:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "993:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "983:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "983:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "976:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "976:43:2"
															},
															"nodeType": "YulIf",
															"src": "973:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "956:5:2",
														"type": ""
													}
												],
												"src": "920:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1100:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1110:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1132:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1119:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1119:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1110:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1175:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1148:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1148:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1148:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1078:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1086:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1094:5:2",
														"type": ""
													}
												],
												"src": "1048:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1259:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1305:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1307:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1307:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1307:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1280:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1289:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1276:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1276:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1301:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:32:2"
															},
															"nodeType": "YulIf",
															"src": "1269:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1398:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1413:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1417:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1442:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1477:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1488:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1473:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1473:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1497:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1452:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1452:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1442:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1229:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1240:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1252:6:2",
														"type": ""
													}
												],
												"src": "1193:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1624:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1641:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1646:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1634:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1634:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1634:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1662:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1681:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1686:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1677:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1677:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1662:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1596:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1601:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1612:11:2",
														"type": ""
													}
												],
												"src": "1528:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1809:119:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1831:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1839:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1827:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1827:14:2"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1843:34:2",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1820:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1820:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1820:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1899:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1907:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1895:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1895:15:2"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1912:8:2",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1888:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1888:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1888:33:2"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1801:6:2",
														"type": ""
													}
												],
												"src": "1703:225:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2080:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2090:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2156:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2161:2:2",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2097:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2097:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2090:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2262:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "2173:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2173:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2173:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2275:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2286:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2291:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2282:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2282:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2275:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2068:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:2",
														"type": ""
													}
												],
												"src": "1934:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2477:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2487:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2499:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2510:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2495:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2495:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2487:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2534:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2545:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2530:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2530:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2553:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2559:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2549:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2549:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2523:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2523:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2523:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2579:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2713:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2587:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2587:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2579:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2457:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2472:4:2",
														"type": ""
													}
												],
												"src": "2306:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2837:76:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2859:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2867:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2855:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2855:14:2"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2871:34:2",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2848:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2848:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2848:58:2"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2829:6:2",
														"type": ""
													}
												],
												"src": "2731:182:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3065:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3075:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3141:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3146:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3082:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3075:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3247:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "3158:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3158:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3158:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3260:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3271:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3276:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3267:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3267:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3260:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3053:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3061:3:2",
														"type": ""
													}
												],
												"src": "2919:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3462:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3472:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3484:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3495:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3480:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3480:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3472:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3519:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3530:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3515:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3515:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3538:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3544:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3534:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3534:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3508:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3508:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3508:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3564:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3698:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3572:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3572:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3564:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3442:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3457:4:2",
														"type": ""
													}
												],
												"src": "3291:419:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638f32d59b1461005b578063e02e64ea14610079578063f2fde38b14610097575b600080fd5b6100596100b3565b005b6100636100c7565b6040516100709190610327565b60405180910390f35b6100816100f0565b60405161008e9190610327565b60405180910390f35b6100b160048036038101906100ac9190610373565b610119565b005b6100bb61019c565b6100c5600061021a565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61012161019c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610190576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018790610423565b60405180910390fd5b6101998161021a565b50565b6101a46100c7565b73ffffffffffffffffffffffffffffffffffffffff166101c26102de565b73ffffffffffffffffffffffffffffffffffffffff1614610218576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020f9061048f565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610311826102e6565b9050919050565b61032181610306565b82525050565b600060208201905061033c6000830184610318565b92915050565b600080fd5b61035081610306565b811461035b57600080fd5b50565b60008135905061036d81610347565b92915050565b60006020828403121561038957610388610342565b5b60006103978482850161035e565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061040d6026836103a0565b9150610418826103b1565b604082019050919050565b6000602082019050818103600083015261043c81610400565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006104796020836103a0565b915061048482610443565b602082019050919050565b600060208201905081810360008301526104a88161046c565b905091905056fea2646970667358221220f09c1ec534fea97623c45d67d8f88e9c97643846087e414a9b4a502f66c3b34664736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xE02E64EA EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x97 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xB3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x63 PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x327 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x81 PUSH2 0xF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x327 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x373 JUMP JUMPDEST PUSH2 0x119 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBB PUSH2 0x19C JUMP JUMPDEST PUSH2 0xC5 PUSH1 0x0 PUSH2 0x21A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x121 PUSH2 0x19C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x190 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x187 SWAP1 PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x199 DUP2 PUSH2 0x21A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A4 PUSH2 0xC7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C2 PUSH2 0x2DE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x218 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20F SWAP1 PUSH2 0x48F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x311 DUP3 PUSH2 0x2E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x321 DUP2 PUSH2 0x306 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x33C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x318 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x350 DUP2 PUSH2 0x306 JUMP JUMPDEST DUP2 EQ PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x36D DUP2 PUSH2 0x347 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x389 JUMPI PUSH2 0x388 PUSH2 0x342 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x397 DUP5 DUP3 DUP6 ADD PUSH2 0x35E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40D PUSH1 0x26 DUP4 PUSH2 0x3A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x418 DUP3 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x43C DUP2 PUSH2 0x400 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x479 PUSH1 0x20 DUP4 PUSH2 0x3A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x484 DUP3 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A8 DUP2 PUSH2 0x46C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE SWAP13 0x1E 0xC5 CALLVALUE INVALID 0xA9 PUSH23 0x23C45D67D8F88E9C97643846087E414A9B4A502F66C3B3 CHAINID PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "231:1649:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1214:103;;;:::i;:::-;;860:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;594:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1381:238;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1214:103;767:13;:11;:13::i;:::-;1279:30:::1;1306:1;1279:18;:30::i;:::-;1214:103::o:0;860:89::-;908:7;935:6;;;;;;;;;;;928:13;;860:89;:::o;594:85::-;638:7;665:6;;;;;;;;;;;658:13;;594:85;:::o;1381:238::-;767:13;:11;:13::i;:::-;1504:1:::1;1484:22;;:8;:22;;::::0;1462:110:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1583:28;1602:8;1583:18;:28::i;:::-;1381:238:::0;:::o;1024:134::-;1104:9;:7;:9::i;:::-;1088:25;;:12;:10;:12::i;:::-;:25;;;1080:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1024:134::o;1686:191::-;1760:16;1779:6;;;;;;;;;;;1760:25;;1805:8;1796:6;;:17;;;;;;;;;;;;;;;;;;1860:8;1829:40;;1850:8;1829:40;;;;;;;;;;;;1749:128;1686:191;:::o;97:98:1:-;150:7;177:10;170:17;;97:98;:::o;7:126:2:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:169::-;1612:11;1646:6;1641:3;1634:19;1686:4;1681:3;1677:14;1662:29;;1528:169;;;;:::o;1703:225::-;1843:34;1839:1;1831:6;1827:14;1820:58;1912:8;1907:2;1899:6;1895:15;1888:33;1703:225;:::o;1934:366::-;2076:3;2097:67;2161:2;2156:3;2097:67;:::i;:::-;2090:74;;2173:93;2262:3;2173:93;:::i;:::-;2291:2;2286:3;2282:12;2275:19;;1934:366;;;:::o;2306:419::-;2472:4;2510:2;2499:9;2495:18;2487:26;;2559:9;2553:4;2549:20;2545:1;2534:9;2530:17;2523:47;2587:131;2713:4;2587:131;:::i;:::-;2579:139;;2306:419;;;:::o;2731:182::-;2871:34;2867:1;2859:6;2855:14;2848:58;2731:182;:::o;2919:366::-;3061:3;3082:67;3146:2;3141:3;3082:67;:::i;:::-;3075:74;;3158:93;3247:3;3158:93;:::i;:::-;3276:2;3271:3;3267:12;3260:19;;2919:366;;;:::o;3291:419::-;3457:4;3495:2;3484:9;3480:18;3472:26;;3544:9;3538:4;3534:20;3530:1;3519:9;3515:17;3508:47;3572:131;3698:4;3572:131;:::i;:::-;3564:139;;3291:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "250600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"isOwner()": "2522",
								"ownerLookup()": "2544",
								"renounceOwnership()": "30376",
								"transferOwnership(address)": "30788"
							},
							"internal": {
								"_checkOwner()": "infinite",
								"_transferOwnership(address)": "27981"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 231,
									"end": 1880,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 231,
									"end": 1880,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 231,
									"end": 1880,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 479,
									"end": 544,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 479,
									"end": 544,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 479,
									"end": 544,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 479,
									"end": 544,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 479,
									"end": 544,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 479,
									"end": 544,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 479,
									"end": 544,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 479,
									"end": 544,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 479,
									"end": 544,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 479,
									"end": 544,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 479,
									"end": 544,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 504,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 523,
									"end": 535,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 523,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 523,
									"end": 533,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 523,
									"end": 533,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 523,
									"end": 535,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 523,
									"end": 535,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 523,
									"end": 535,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 523,
									"end": 535,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 523,
									"end": 535,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 504,
									"end": 522,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 504,
									"end": 522,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 504,
									"end": 522,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 504,
									"end": 536,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 504,
									"end": 536,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 504,
									"end": 536,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 504,
									"end": 536,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 504,
									"end": 536,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 231,
									"end": 1880,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 231,
									"end": 1880,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 97,
									"end": 195,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 97,
									"end": 195,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 150,
									"end": 157,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 187,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 170,
									"end": 187,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 170,
									"end": 187,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 97,
									"end": 195,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 97,
									"end": 195,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1686,
									"end": 1877,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1686,
									"end": 1877,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1760,
									"end": 1776,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1779,
									"end": 1785,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1779,
									"end": 1785,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1779,
									"end": 1785,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1779,
									"end": 1785,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1779,
									"end": 1785,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1779,
									"end": 1785,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1779,
									"end": 1785,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1779,
									"end": 1785,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1779,
									"end": 1785,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1779,
									"end": 1785,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1779,
									"end": 1785,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1760,
									"end": 1785,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1760,
									"end": 1785,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1805,
									"end": 1813,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1796,
									"end": 1802,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1796,
									"end": 1802,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1796,
									"end": 1813,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1796,
									"end": 1813,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1796,
									"end": 1813,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1796,
									"end": 1813,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1796,
									"end": 1813,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1796,
									"end": 1813,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1796,
									"end": 1813,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1796,
									"end": 1813,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1796,
									"end": 1813,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1796,
									"end": 1813,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1796,
									"end": 1813,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1796,
									"end": 1813,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1796,
									"end": 1813,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1796,
									"end": 1813,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1796,
									"end": 1813,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1796,
									"end": 1813,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1796,
									"end": 1813,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1796,
									"end": 1813,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1860,
									"end": 1868,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1829,
									"end": 1869,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1829,
									"end": 1869,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1850,
									"end": 1858,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1829,
									"end": 1869,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1829,
									"end": 1869,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1829,
									"end": 1869,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 1829,
									"end": 1869,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1829,
									"end": 1869,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1829,
									"end": 1869,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1829,
									"end": 1869,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1829,
									"end": 1869,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1829,
									"end": 1869,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1829,
									"end": 1869,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1829,
									"end": 1869,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1829,
									"end": 1869,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 1749,
									"end": 1877,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1686,
									"end": 1877,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1686,
									"end": 1877,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 231,
									"end": 1880,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 231,
									"end": 1880,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 231,
									"end": 1880,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 231,
									"end": 1880,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 231,
									"end": 1880,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 231,
									"end": 1880,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 231,
									"end": 1880,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 231,
									"end": 1880,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 231,
									"end": 1880,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f09c1ec534fea97623c45d67d8f88e9c97643846087e414a9b4a502f66c3b34664736f6c63430008120033",
									".code": [
										{
											"begin": 231,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "8F32D59B"
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "E02E64EA"
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 231,
											"end": 1880,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1317,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1214,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1214,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1214,
											"end": 1317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1317,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1214,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1317,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 860,
											"end": 949,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 860,
											"end": 949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 860,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 860,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 860,
											"end": 949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 860,
											"end": 949,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 860,
											"end": 949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 860,
											"end": 949,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 860,
											"end": 949,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 860,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 860,
											"end": 949,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 860,
											"end": 949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 860,
											"end": 949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 860,
											"end": 949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 860,
											"end": 949,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 860,
											"end": 949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 860,
											"end": 949,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 860,
											"end": 949,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 860,
											"end": 949,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 860,
											"end": 949,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 860,
											"end": 949,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 860,
											"end": 949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 860,
											"end": 949,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 594,
											"end": 679,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 594,
											"end": 679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 594,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 594,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 594,
											"end": 679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 594,
											"end": 679,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 594,
											"end": 679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 594,
											"end": 679,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 594,
											"end": 679,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 594,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 594,
											"end": 679,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 594,
											"end": 679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 594,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 594,
											"end": 679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 594,
											"end": 679,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 594,
											"end": 679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 594,
											"end": 679,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 594,
											"end": 679,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 594,
											"end": 679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 594,
											"end": 679,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 594,
											"end": 679,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 594,
											"end": 679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 594,
											"end": 679,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1619,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1381,
											"end": 1619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1381,
											"end": 1619,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1381,
											"end": 1619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1619,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1619,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1381,
											"end": 1619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1381,
											"end": 1619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1619,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1381,
											"end": 1619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1381,
											"end": 1619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1619,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1381,
											"end": 1619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1619,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1317,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1214,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 767,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 767,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 767,
											"end": 780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 767,
											"end": 780,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 767,
											"end": 780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 1309,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1306,
											"end": 1307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 1297,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1279,
											"end": 1309,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 1309,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1279,
											"end": 1309,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1214,
											"end": 1317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 860,
											"end": 949,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 860,
											"end": 949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 908,
											"end": 915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 935,
											"end": 941,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 935,
											"end": 941,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 935,
											"end": 941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 935,
											"end": 941,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 935,
											"end": 941,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 935,
											"end": 941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 935,
											"end": 941,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 935,
											"end": 941,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 935,
											"end": 941,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 928,
											"end": 941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 928,
											"end": 941,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 860,
											"end": 949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 860,
											"end": 949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 594,
											"end": 679,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 594,
											"end": 679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 638,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 671,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 665,
											"end": 671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 671,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 665,
											"end": 671,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 665,
											"end": 671,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 665,
											"end": 671,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 665,
											"end": 671,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 658,
											"end": 671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 658,
											"end": 671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 594,
											"end": 679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 594,
											"end": 679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1619,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1381,
											"end": 1619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 767,
											"end": 780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 767,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 767,
											"end": 780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 767,
											"end": 780,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 767,
											"end": 780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1504,
											"end": 1505,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1484,
											"end": 1506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1484,
											"end": 1506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1492,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1484,
											"end": 1506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1506,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1462,
											"end": 1572,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1462,
											"end": 1572,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1462,
											"end": 1572,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1572,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1462,
											"end": 1572,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1462,
											"end": 1572,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1462,
											"end": 1572,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1572,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1462,
											"end": 1572,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1462,
											"end": 1572,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1572,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1572,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1572,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1572,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1572,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1572,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1462,
											"end": 1572,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1583,
											"end": 1611,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1602,
											"end": 1610,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1583,
											"end": 1601,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1583,
											"end": 1611,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1583,
											"end": 1611,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1583,
											"end": 1611,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1024,
											"end": 1158,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1024,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1104,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1104,
											"end": 1113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1113,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1104,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1113,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1088,
											"end": 1113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1088,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1088,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1100,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1088,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1113,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1088,
											"end": 1113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1113,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1080,
											"end": 1150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1080,
											"end": 1150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1150,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1080,
											"end": 1150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1150,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1150,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1080,
											"end": 1150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1080,
											"end": 1150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1080,
											"end": 1150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1150,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1080,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1080,
											"end": 1150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1150,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1150,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1080,
											"end": 1150,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1080,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1024,
											"end": 1158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1686,
											"end": 1877,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1686,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1785,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1785,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1785,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1785,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1779,
											"end": 1785,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1785,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1785,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1779,
											"end": 1785,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1805,
											"end": 1813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1813,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1796,
											"end": 1813,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1813,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1813,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1796,
											"end": 1813,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1813,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1813,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1813,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1796,
											"end": 1813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1813,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1813,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1813,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1869,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1869,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1850,
											"end": 1858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1869,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1869,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1869,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1829,
											"end": 1869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1869,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1869,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1869,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1686,
											"end": 1877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1686,
											"end": 1877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 97,
											"end": 195,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 97,
											"end": 195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 150,
											"end": 157,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 187,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 170,
											"end": 187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 170,
											"end": 187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 97,
											"end": 195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 97,
											"end": 195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 674,
											"end": 791,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 781,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 773,
											"end": 785,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1011,
											"end": 1016,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 993,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 983,
											"end": 1018,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1030,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1022,
											"end": 1034,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 920,
											"end": 1042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1138,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1119,
											"end": 1139,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1175,
											"end": 1180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1148,
											"end": 1181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1252,
											"end": 1258,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1298,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1287,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1276,
											"end": 1299,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1307,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1427,
											"end": 1428,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1497,
											"end": 1504,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1473,
											"end": 1495,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1452,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1398,
											"end": 1515,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1623,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1652,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1644,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1653,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1690,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1681,
											"end": 1684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1691,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1528,
											"end": 1697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1928,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1703,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 1839,
											"end": 1840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1827,
											"end": 1841,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1820,
											"end": 1878,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1912,
											"end": 1920,
											"name": "PUSH",
											"source": 2,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1907,
											"end": 1909,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1899,
											"end": 1905,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1910,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1888,
											"end": 1921,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1928,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 2300,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1934,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2076,
											"end": 2079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2161,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2156,
											"end": 2159,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2097,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2090,
											"end": 2164,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2090,
											"end": 2164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2262,
											"end": 2265,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2173,
											"end": 2266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2173,
											"end": 2266,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2173,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2291,
											"end": 2293,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2286,
											"end": 2289,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2294,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2294,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 2300,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 2300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 2300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1934,
											"end": 2300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2725,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2306,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2472,
											"end": 2476,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2510,
											"end": 2512,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2499,
											"end": 2508,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2487,
											"end": 2513,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2487,
											"end": 2513,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2559,
											"end": 2568,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2549,
											"end": 2569,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2545,
											"end": 2546,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2543,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2530,
											"end": 2547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2523,
											"end": 2570,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2587,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2713,
											"end": 2717,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2587,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2587,
											"end": 2718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2587,
											"end": 2718,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2587,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2579,
											"end": 2718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2579,
											"end": 2718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2725,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2725,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2731,
											"end": 2913,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2731,
											"end": 2913,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2871,
											"end": 2905,
											"name": "PUSH",
											"source": 2,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2867,
											"end": 2868,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2859,
											"end": 2865,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2855,
											"end": 2869,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2848,
											"end": 2906,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2731,
											"end": 2913,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2731,
											"end": 2913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 3285,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2919,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3064,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3146,
											"end": 3148,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3141,
											"end": 3144,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3082,
											"end": 3149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3149,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3082,
											"end": 3149,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3149,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3149,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3158,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3247,
											"end": 3250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3158,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3158,
											"end": 3251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3158,
											"end": 3251,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3158,
											"end": 3251,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3276,
											"end": 3278,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3271,
											"end": 3274,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3267,
											"end": 3279,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3260,
											"end": 3279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3260,
											"end": 3279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 3285,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 3285,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 3285,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2919,
											"end": 3285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3710,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3291,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3457,
											"end": 3461,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3495,
											"end": 3497,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3484,
											"end": 3493,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3472,
											"end": 3498,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3472,
											"end": 3498,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3544,
											"end": 3553,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3542,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 3554,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3530,
											"end": 3531,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3528,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3515,
											"end": 3532,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3555,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3572,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3698,
											"end": 3702,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3572,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3572,
											"end": 3703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3572,
											"end": 3703,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3572,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3564,
											"end": 3703,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3564,
											"end": 3703,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3710,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"Contracts/Ownership/Ownable.sol",
								"Contracts/Utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"ownerLookup()": "e02e64ea",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerLookup\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Assign the contract to an owner\"},\"ownerLookup()\":{\"notice\":\"Look up the address of the owner\"},\"renounceOwnership()\":{\"notice\":\"Define a function to renounce ownerhip\"},\"transferOwnership(address)\":{\"notice\":\"Define a public function to transfer ownership\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/Ownership/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/Ownership/Ownable.sol\":{\"keccak256\":\"0x8340426bd551580aba63338b8ebf6661a268d788ce2b8d7ac418c4a63d538b51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04682bbe74917084e7953c5c15dd9fc27b37742ce4a429212b803387b99f82b4\",\"dweb:/ipfs/QmTj8EXvvdfp6E5PBv5pze4BD3Hx7HTD4nLP4MNwJSkDwP\"]},\"Contracts/Utils/Context.sol\":{\"keccak256\":\"0x34749fd4e06e5922f373753c49efaee4404ff717d9a4c570725352901b10ec78\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8a3a68e3788b4d9e8a148e7e8dd10dd4154d0be0a9e0acb67803d9b99a3b730e\",\"dweb:/ipfs/QmR7uVeH35ijykVCgiWT57KkiLkvs2P6ScovMSmYBX6QUf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 6,
								"contract": "Contracts/Ownership/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "Assign the contract to an owner"
							},
							"ownerLookup()": {
								"notice": "Look up the address of the owner"
							},
							"renounceOwnership()": {
								"notice": "Define a function to renounce ownerhip"
							},
							"transferOwnership(address)": {
								"notice": "Define a public function to transfer ownership"
							}
						},
						"version": 1
					}
				}
			},
			"Contracts/Utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/Utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/Utils/Context.sol\":{\"keccak256\":\"0x34749fd4e06e5922f373753c49efaee4404ff717d9a4c570725352901b10ec78\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8a3a68e3788b4d9e8a148e7e8dd10dd4154d0be0a9e0acb67803d9b99a3b730e\",\"dweb:/ipfs/QmR7uVeH35ijykVCgiWT57KkiLkvs2P6ScovMSmYBX6QUf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Contracts/Ownership/Ownable.sol": {
				"ast": {
					"absolutePath": "Contracts/Ownership/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							140
						],
						"Ownable": [
							119
						]
					},
					"id": 120,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:0"
						},
						{
							"absolutePath": "Contracts/Utils/Context.sol",
							"file": "../Utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 120,
							"sourceUnit": 141,
							"src": "60:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "Context",
										"nameLocations": [
											"251:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 140,
										"src": "251:7:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "251:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 119,
							"linearizedBaseContracts": [
								119,
								140
							],
							"name": "Ownable",
							"nameLocation": "240:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 6,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "282:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 119,
									"src": "266:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 5,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "266:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 12,
									"name": "OwnershipTransferred",
									"nameLocation": "327:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "374:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "358:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "414:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "398:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "398:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:82:0"
									},
									"src": "321:109:0"
								},
								{
									"body": {
										"id": 21,
										"nodeType": "Block",
										"src": "493:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 17,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "523:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "523:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 16,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "504:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "504:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "504:32:0"
											}
										]
									},
									"documentation": {
										"id": 13,
										"nodeType": "StructuredDocumentation",
										"src": "438:35:0",
										"text": "Assign the contract to an owner"
									},
									"id": 22,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "490:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "493:0:0"
									},
									"scope": 119,
									"src": "479:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "647:32:0",
										"statements": [
											{
												"expression": {
													"id": 28,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 6,
													"src": "665:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 27,
												"id": 29,
												"nodeType": "Return",
												"src": "658:13:0"
											}
										]
									},
									"documentation": {
										"id": 23,
										"nodeType": "StructuredDocumentation",
										"src": "552:36:0",
										"text": "Look up the address of the owner"
									},
									"functionSelector": "e02e64ea",
									"id": 31,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerLookup",
									"nameLocation": "603:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "614:2:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "638:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "638:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "637:9:0"
									},
									"scope": 119,
									"src": "594:85:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "756:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 34,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "767:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "767:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "767:13:0"
											},
											{
												"id": 37,
												"nodeType": "PlaceholderStatement",
												"src": "791:1:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "687:42:0",
										"text": "Define a function modifier 'onlyOwner'"
									},
									"id": 39,
									"name": "onlyOwner",
									"nameLocation": "744:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "753:2:0"
									},
									"src": "735:65:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "917:32:0",
										"statements": [
											{
												"expression": {
													"id": 44,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 6,
													"src": "935:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 43,
												"id": 45,
												"nodeType": "Return",
												"src": "928:13:0"
											}
										]
									},
									"functionSelector": "8f32d59b",
									"id": 47,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nameLocation": "869:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "876:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "908:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "908:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "907:9:0"
									},
									"scope": 119,
									"src": "860:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "1069:89:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 52,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "1088:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1088:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 54,
																	"name": "isOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "1104:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1104:9:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1088:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1115:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 51,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1080:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1080:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "1080:70:0"
											}
										]
									},
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "957:61:0",
										"text": "Check if the calling address is the owner of the contract"
									},
									"id": 61,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1033:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1044:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1069:0:0"
									},
									"scope": 119,
									"src": "1024:134:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "1268:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 70,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1306:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 69,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1298:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 68,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1298:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1298:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 67,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "1279:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1279:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "1279:30:0"
											}
										]
									},
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "1166:42:0",
										"text": "Define a function to renounce ownerhip"
									},
									"functionSelector": "715018a6",
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 65,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 64,
												"name": "onlyOwner",
												"nameLocations": [
													"1258:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 39,
												"src": "1258:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1258:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1223:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1240:2:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1268:0:0"
									},
									"scope": 119,
									"src": "1214:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "1451:168:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "1484:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 87,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1504:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 86,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1496:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 85,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1496:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1496:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1484:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1521:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 83,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1462:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1462:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "1462:110:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 94,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "1602:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 93,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "1583:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1583:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "1583:28:0"
											}
										]
									},
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "1325:50:0",
										"text": "Define a public function to transfer ownership"
									},
									"functionSelector": "f2fde38b",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 81,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 80,
												"name": "onlyOwner",
												"nameLocations": [
													"1441:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 39,
												"src": "1441:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1441:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1390:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1416:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1408:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 77,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1408:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1407:18:0"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1451:0:0"
									},
									"scope": 119,
									"src": "1381:238:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 117,
										"nodeType": "Block",
										"src": "1749:128:0",
										"statements": [
											{
												"assignments": [
													105
												],
												"declarations": [
													{
														"constant": false,
														"id": 105,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "1768:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 117,
														"src": "1760:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 104,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1760:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 107,
												"initialValue": {
													"id": 106,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 6,
													"src": "1779:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1760:25:0"
											},
											{
												"expression": {
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 108,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "1796:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 109,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "1805:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1796:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "1796:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 113,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "1850:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 114,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "1860:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 112,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "1829:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1829:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 116,
												"nodeType": "EmitStatement",
												"src": "1824:45:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "1627:53:0",
										"text": "Define an internal function to transfer ownership"
									},
									"id": 118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "1695:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1722:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "1714:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1714:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1713:18:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1749:0:0"
									},
									"scope": 119,
									"src": "1686:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 120,
							"src": "231:1649:0",
							"usedErrors": []
						}
					],
					"src": "35:1845:0"
				},
				"id": 0
			},
			"Contracts/Utils/Context.sol": {
				"ast": {
					"absolutePath": "Contracts/Utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							140
						]
					},
					"id": 141,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 121,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 140,
							"linearizedBaseContracts": [
								140
							],
							"name": "Context",
							"nameLocation": "82:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "159:36:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 126,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "177:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "181:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "177:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 125,
												"id": 128,
												"nodeType": "Return",
												"src": "170:17:1"
											}
										]
									},
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "106:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "116:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "150:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "150:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "149:9:1"
									},
									"scope": 140,
									"src": "97:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "270:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 135,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "288:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "292:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "288:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 134,
												"id": 137,
												"nodeType": "Return",
												"src": "281:15:1"
											}
										]
									},
									"id": 139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "212:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "220:2:1"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "254:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 132,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "254:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:16:1"
									},
									"scope": 140,
									"src": "203:101:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 141,
							"src": "64:243:1",
							"usedErrors": []
						}
					],
					"src": "39:268:1"
				},
				"id": 1
			}
		}
	}
}