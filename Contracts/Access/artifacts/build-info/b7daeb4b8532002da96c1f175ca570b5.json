{
	"id": "b7daeb4b8532002da96c1f175ca570b5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"Contracts/Access/Retailer.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity ^0.8.0;\r\nimport \"./Roles.sol\";\r\nimport \"../Utils/Context.sol\";\r\n\r\ncontract Retailer is Context{\r\n\r\n\r\n   using Roles for Roles.Role;\r\n\r\n\r\n\r\n   event RetailerAdded(address indexed account );\r\n   event RetailerRemoved(address indexed account );\r\n\r\n   Roles.Role private retailers;\r\n\r\n   // \r\n\r\n   constructor() {\r\n       _addRetailer(_msgSender());\r\n\r\n   }\r\n    // defining modifier to check the callling address has an appropriate role \r\n   modifier onlyRetailer {\r\n       require(isRetailer(_msgSender()));\r\n       _;\r\n   }\r\n   // function to check if address is of correct role or not \r\n    function isRetailer(address account )\r\n    public \r\n    view \r\n    returns (bool){\r\n        return retailers.has(account);\r\n    }\r\n    \r\n    function addRetailer (address account) public onlyRetailer{\r\n        _addRetailer(account);\r\n    }\r\n\r\n    function  renouceRetailer() public{\r\n        \r\n        _removeRetailer(_msgSender());\r\n    }\r\n\r\n    function _addRetailer  (address account ) internal{\r\n        retailers.add(account);\r\n        emit RetailerAdded(account);\r\n    }\r\n    \r\n    function _removeRetailer(address account ) internal {\r\n        retailers.remove(account);\r\n        emit RetailerRemoved(account );\r\n    }\r\n\r\n\r\n}"
			},
			"Contracts/Utils/Context.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity ^0.8.0;\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}"
			},
			"Contracts/Access/Roles.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity ^0.8.0;\r\n\r\nlibrary Roles {\r\n    struct Role{\r\n        mapping(address=> bool) bearer;\r\n    }\r\n    function add(Role storage role , address account) internal {\r\n        require( (account != address(0)));\r\n        require(!has(role , account ));\r\n        role.bearer[account]= true;\r\n\r\n    }\r\n     function remove(Role storage role , address account) internal {\r\n        require( (account != address(0)));\r\n        require(has(role , account ));\r\n        role.bearer[account]= false;\r\n\r\n    }\r\n     function has(Role storage role , address account ) internal view returns (bool) {\r\n         require(account != address(0));\r\n         return role.bearer[account];\r\n\r\n     }\r\n      \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Contracts/Access/Retailer.sol": {
				"Retailer": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "RetailerAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "RetailerRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addRetailer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isRetailer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renouceRetailer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Contracts/Access/Retailer.sol\":121:1278  contract Retailer is Context{... */\n  mstore(0x40, 0x80)\n    /* \"Contracts/Access/Retailer.sol\":349:408  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Contracts/Access/Retailer.sol\":373:399  _addRetailer(_msgSender()) */\n  tag_4\n    /* \"Contracts/Access/Retailer.sol\":386:398  _msgSender() */\n  tag_5\n    /* \"Contracts/Access/Retailer.sol\":386:396  _msgSender */\n  shl(0x20, tag_6)\n    /* \"Contracts/Access/Retailer.sol\":386:398  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"Contracts/Access/Retailer.sol\":373:385  _addRetailer */\n  shl(0x20, tag_7)\n    /* \"Contracts/Access/Retailer.sol\":373:399  _addRetailer(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"Contracts/Access/Retailer.sol\":121:1278  contract Retailer is Context{... */\n  jump(tag_8)\n    /* \"Contracts/Utils/Context.sol\":97:195  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"Contracts/Utils/Context.sol\":150:157  address */\n  0x00\n    /* \"Contracts/Utils/Context.sol\":177:187  msg.sender */\n  caller\n    /* \"Contracts/Utils/Context.sol\":170:187  return msg.sender */\n  swap1\n  pop\n    /* \"Contracts/Utils/Context.sol\":97:195  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"Contracts/Access/Retailer.sol\":993:1122  function _addRetailer  (address account ) internal{... */\ntag_7:\n    /* \"Contracts/Access/Retailer.sol\":1054:1076  retailers.add(account) */\n  tag_11\n    /* \"Contracts/Access/Retailer.sol\":1068:1075  account */\n  dup2\n    /* \"Contracts/Access/Retailer.sol\":1054:1063  retailers */\n  0x00\n    /* \"Contracts/Access/Retailer.sol\":1054:1067  retailers.add */\n  shl(0x20, tag_12)\n  swap1\n    /* \"Contracts/Access/Retailer.sol\":1054:1076  retailers.add(account) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"Contracts/Access/Retailer.sol\":1106:1113  account */\n  dup1\n    /* \"Contracts/Access/Retailer.sol\":1092:1114  RetailerAdded(account) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x71ae26cad02663e3d92efd6ec56031a80d74a20c0ab4183faa8bf262261c9baa\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"Contracts/Access/Retailer.sol\":993:1122  function _addRetailer  (address account ) internal{... */\n  pop\n  jump\t// out\n    /* \"Contracts/Access/Roles.sol\":153:344  function add(Role storage role , address account) internal {... */\ntag_12:\n    /* \"Contracts/Access/Roles.sol\":252:253  0 */\n  0x00\n    /* \"Contracts/Access/Roles.sol\":233:254  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Contracts/Access/Roles.sol\":233:240  account */\n  dup2\n    /* \"Contracts/Access/Roles.sol\":233:254  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Contracts/Access/Roles.sol\":223:256  require( (account != address(0))) */\n  tag_14\n  jumpi\n  0x00\n  dup1\n  revert\ntag_14:\n    /* \"Contracts/Access/Roles.sol\":276:296  has(role , account ) */\n  tag_15\n    /* \"Contracts/Access/Roles.sol\":280:284  role */\n  dup3\n    /* \"Contracts/Access/Roles.sol\":287:294  account */\n  dup3\n    /* \"Contracts/Access/Roles.sol\":276:279  has */\n  shl(0x20, tag_16)\n    /* \"Contracts/Access/Roles.sol\":276:296  has(role , account ) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"Contracts/Access/Roles.sol\":275:296  !has(role , account ) */\n  iszero\n    /* \"Contracts/Access/Roles.sol\":267:297  require(!has(role , account )) */\n  tag_17\n  jumpi\n  0x00\n  dup1\n  revert\ntag_17:\n    /* \"Contracts/Access/Roles.sol\":330:334  true */\n  0x01\n    /* \"Contracts/Access/Roles.sol\":308:312  role */\n  dup3\n    /* \"Contracts/Access/Roles.sol\":308:319  role.bearer */\n  0x00\n  add\n    /* \"Contracts/Access/Roles.sol\":308:328  role.bearer[account] */\n  0x00\n    /* \"Contracts/Access/Roles.sol\":320:327  account */\n  dup4\n    /* \"Contracts/Access/Roles.sol\":308:328  role.bearer[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"Contracts/Access/Roles.sol\":308:334  role.bearer[account]= true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Contracts/Access/Roles.sol\":153:344  function add(Role storage role , address account) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"Contracts/Access/Roles.sol\":552:724  function has(Role storage role , address account ) internal view returns (bool) {... */\ntag_16:\n    /* \"Contracts/Access/Roles.sol\":626:630  bool */\n  0x00\n    /* \"Contracts/Access/Roles.sol\":671:672  0 */\n  dup1\n    /* \"Contracts/Access/Roles.sol\":652:673  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Contracts/Access/Roles.sol\":652:659  account */\n  dup3\n    /* \"Contracts/Access/Roles.sol\":652:673  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Contracts/Access/Roles.sol\":644:674  require(account != address(0)) */\n  tag_19\n  jumpi\n  0x00\n  dup1\n  revert\ntag_19:\n    /* \"Contracts/Access/Roles.sol\":693:697  role */\n  dup3\n    /* \"Contracts/Access/Roles.sol\":693:704  role.bearer */\n  0x00\n  add\n    /* \"Contracts/Access/Roles.sol\":693:713  role.bearer[account] */\n  0x00\n    /* \"Contracts/Access/Roles.sol\":705:712  account */\n  dup4\n    /* \"Contracts/Access/Roles.sol\":693:713  role.bearer[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"Contracts/Access/Roles.sol\":686:713  return role.bearer[account] */\n  swap1\n  pop\n    /* \"Contracts/Access/Roles.sol\":552:724  function has(Role storage role , address account ) internal view returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Contracts/Access/Retailer.sol\":121:1278  contract Retailer is Context{... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contracts/Access/Retailer.sol\":121:1278  contract Retailer is Context{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5da09b88\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8ec4f505\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe34d7a07\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Contracts/Access/Retailer.sol\":646:775  function isRetailer(address account )... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/Access/Retailer.sol\":787:885  function addRetailer (address account) public onlyRetailer{... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_13:\n      tag_14\n      jump\t// in\n    tag_12:\n      stop\n        /* \"Contracts/Access/Retailer.sol\":893:985  function  renouceRetailer() public{... */\n    tag_5:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"Contracts/Access/Retailer.sol\":646:775  function isRetailer(address account )... */\n    tag_9:\n        /* \"Contracts/Access/Retailer.sol\":722:726  bool */\n      0x00\n        /* \"Contracts/Access/Retailer.sol\":745:767  retailers.has(account) */\n      tag_18\n        /* \"Contracts/Access/Retailer.sol\":759:766  account */\n      dup3\n        /* \"Contracts/Access/Retailer.sol\":745:754  retailers */\n      0x00\n        /* \"Contracts/Access/Retailer.sol\":745:758  retailers.has */\n      tag_19\n      swap1\n        /* \"Contracts/Access/Retailer.sol\":745:767  retailers.has(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_18:\n        /* \"Contracts/Access/Retailer.sol\":738:767  return retailers.has(account) */\n      swap1\n      pop\n        /* \"Contracts/Access/Retailer.sol\":646:775  function isRetailer(address account )... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Contracts/Access/Retailer.sol\":787:885  function addRetailer (address account) public onlyRetailer{... */\n    tag_14:\n        /* \"Contracts/Access/Retailer.sol\":534:558  isRetailer(_msgSender()) */\n      tag_21\n        /* \"Contracts/Access/Retailer.sol\":545:557  _msgSender() */\n      tag_22\n        /* \"Contracts/Access/Retailer.sol\":545:555  _msgSender */\n      tag_23\n        /* \"Contracts/Access/Retailer.sol\":545:557  _msgSender() */\n      jump\t// in\n    tag_22:\n        /* \"Contracts/Access/Retailer.sol\":534:544  isRetailer */\n      tag_9\n        /* \"Contracts/Access/Retailer.sol\":534:558  isRetailer(_msgSender()) */\n      jump\t// in\n    tag_21:\n        /* \"Contracts/Access/Retailer.sol\":526:559  require(isRetailer(_msgSender())) */\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n        /* \"Contracts/Access/Retailer.sol\":856:877  _addRetailer(account) */\n      tag_26\n        /* \"Contracts/Access/Retailer.sol\":869:876  account */\n      dup2\n        /* \"Contracts/Access/Retailer.sol\":856:868  _addRetailer */\n      tag_27\n        /* \"Contracts/Access/Retailer.sol\":856:877  _addRetailer(account) */\n      jump\t// in\n    tag_26:\n        /* \"Contracts/Access/Retailer.sol\":787:885  function addRetailer (address account) public onlyRetailer{... */\n      pop\n      jump\t// out\n        /* \"Contracts/Access/Retailer.sol\":893:985  function  renouceRetailer() public{... */\n    tag_16:\n        /* \"Contracts/Access/Retailer.sol\":948:977  _removeRetailer(_msgSender()) */\n      tag_29\n        /* \"Contracts/Access/Retailer.sol\":964:976  _msgSender() */\n      tag_30\n        /* \"Contracts/Access/Retailer.sol\":964:974  _msgSender */\n      tag_23\n        /* \"Contracts/Access/Retailer.sol\":964:976  _msgSender() */\n      jump\t// in\n    tag_30:\n        /* \"Contracts/Access/Retailer.sol\":948:963  _removeRetailer */\n      tag_31\n        /* \"Contracts/Access/Retailer.sol\":948:977  _removeRetailer(_msgSender()) */\n      jump\t// in\n    tag_29:\n        /* \"Contracts/Access/Retailer.sol\":893:985  function  renouceRetailer() public{... */\n      jump\t// out\n        /* \"Contracts/Access/Roles.sol\":552:724  function has(Role storage role , address account ) internal view returns (bool) {... */\n    tag_19:\n        /* \"Contracts/Access/Roles.sol\":626:630  bool */\n      0x00\n        /* \"Contracts/Access/Roles.sol\":671:672  0 */\n      dup1\n        /* \"Contracts/Access/Roles.sol\":652:673  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/Access/Roles.sol\":652:659  account */\n      dup3\n        /* \"Contracts/Access/Roles.sol\":652:673  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Contracts/Access/Roles.sol\":644:674  require(account != address(0)) */\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n        /* \"Contracts/Access/Roles.sol\":693:697  role */\n      dup3\n        /* \"Contracts/Access/Roles.sol\":693:704  role.bearer */\n      0x00\n      add\n        /* \"Contracts/Access/Roles.sol\":693:713  role.bearer[account] */\n      0x00\n        /* \"Contracts/Access/Roles.sol\":705:712  account */\n      dup4\n        /* \"Contracts/Access/Roles.sol\":693:713  role.bearer[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Contracts/Access/Roles.sol\":686:713  return role.bearer[account] */\n      swap1\n      pop\n        /* \"Contracts/Access/Roles.sol\":552:724  function has(Role storage role , address account ) internal view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/Utils/Context.sol\":97:195  function _msgSender() internal view virtual returns (address) {... */\n    tag_23:\n        /* \"Contracts/Utils/Context.sol\":150:157  address */\n      0x00\n        /* \"Contracts/Utils/Context.sol\":177:187  msg.sender */\n      caller\n        /* \"Contracts/Utils/Context.sol\":170:187  return msg.sender */\n      swap1\n      pop\n        /* \"Contracts/Utils/Context.sol\":97:195  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Contracts/Access/Retailer.sol\":993:1122  function _addRetailer  (address account ) internal{... */\n    tag_27:\n        /* \"Contracts/Access/Retailer.sol\":1054:1076  retailers.add(account) */\n      tag_36\n        /* \"Contracts/Access/Retailer.sol\":1068:1075  account */\n      dup2\n        /* \"Contracts/Access/Retailer.sol\":1054:1063  retailers */\n      0x00\n        /* \"Contracts/Access/Retailer.sol\":1054:1067  retailers.add */\n      tag_37\n      swap1\n        /* \"Contracts/Access/Retailer.sol\":1054:1076  retailers.add(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_36:\n        /* \"Contracts/Access/Retailer.sol\":1106:1113  account */\n      dup1\n        /* \"Contracts/Access/Retailer.sol\":1092:1114  RetailerAdded(account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x71ae26cad02663e3d92efd6ec56031a80d74a20c0ab4183faa8bf262261c9baa\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Contracts/Access/Retailer.sol\":993:1122  function _addRetailer  (address account ) internal{... */\n      pop\n      jump\t// out\n        /* \"Contracts/Access/Retailer.sol\":1134:1271  function _removeRetailer(address account ) internal {... */\n    tag_31:\n        /* \"Contracts/Access/Retailer.sol\":1197:1222  retailers.remove(account) */\n      tag_39\n        /* \"Contracts/Access/Retailer.sol\":1214:1221  account */\n      dup2\n        /* \"Contracts/Access/Retailer.sol\":1197:1206  retailers */\n      0x00\n        /* \"Contracts/Access/Retailer.sol\":1197:1213  retailers.remove */\n      tag_40\n      swap1\n        /* \"Contracts/Access/Retailer.sol\":1197:1222  retailers.remove(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_39:\n        /* \"Contracts/Access/Retailer.sol\":1254:1261  account */\n      dup1\n        /* \"Contracts/Access/Retailer.sol\":1238:1263  RetailerRemoved(account ) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdb7176e79cffef81cb01767dd0447a0b24bb72ca9778d4b245581086b2a7e6db\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Contracts/Access/Retailer.sol\":1134:1271  function _removeRetailer(address account ) internal {... */\n      pop\n      jump\t// out\n        /* \"Contracts/Access/Roles.sol\":153:344  function add(Role storage role , address account) internal {... */\n    tag_37:\n        /* \"Contracts/Access/Roles.sol\":252:253  0 */\n      0x00\n        /* \"Contracts/Access/Roles.sol\":233:254  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/Access/Roles.sol\":233:240  account */\n      dup2\n        /* \"Contracts/Access/Roles.sol\":233:254  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Contracts/Access/Roles.sol\":223:256  require( (account != address(0))) */\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n        /* \"Contracts/Access/Roles.sol\":276:296  has(role , account ) */\n      tag_43\n        /* \"Contracts/Access/Roles.sol\":280:284  role */\n      dup3\n        /* \"Contracts/Access/Roles.sol\":287:294  account */\n      dup3\n        /* \"Contracts/Access/Roles.sol\":276:279  has */\n      tag_19\n        /* \"Contracts/Access/Roles.sol\":276:296  has(role , account ) */\n      jump\t// in\n    tag_43:\n        /* \"Contracts/Access/Roles.sol\":275:296  !has(role , account ) */\n      iszero\n        /* \"Contracts/Access/Roles.sol\":267:297  require(!has(role , account )) */\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n        /* \"Contracts/Access/Roles.sol\":330:334  true */\n      0x01\n        /* \"Contracts/Access/Roles.sol\":308:312  role */\n      dup3\n        /* \"Contracts/Access/Roles.sol\":308:319  role.bearer */\n      0x00\n      add\n        /* \"Contracts/Access/Roles.sol\":308:328  role.bearer[account] */\n      0x00\n        /* \"Contracts/Access/Roles.sol\":320:327  account */\n      dup4\n        /* \"Contracts/Access/Roles.sol\":308:328  role.bearer[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Contracts/Access/Roles.sol\":308:334  role.bearer[account]= true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Contracts/Access/Roles.sol\":153:344  function add(Role storage role , address account) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/Access/Roles.sol\":351:545  function remove(Role storage role , address account) internal {... */\n    tag_40:\n        /* \"Contracts/Access/Roles.sol\":453:454  0 */\n      0x00\n        /* \"Contracts/Access/Roles.sol\":434:455  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Contracts/Access/Roles.sol\":434:441  account */\n      dup2\n        /* \"Contracts/Access/Roles.sol\":434:455  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Contracts/Access/Roles.sol\":424:457  require( (account != address(0))) */\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n        /* \"Contracts/Access/Roles.sol\":476:496  has(role , account ) */\n      tag_47\n        /* \"Contracts/Access/Roles.sol\":480:484  role */\n      dup3\n        /* \"Contracts/Access/Roles.sol\":487:494  account */\n      dup3\n        /* \"Contracts/Access/Roles.sol\":476:479  has */\n      tag_19\n        /* \"Contracts/Access/Roles.sol\":476:496  has(role , account ) */\n      jump\t// in\n    tag_47:\n        /* \"Contracts/Access/Roles.sol\":468:497  require(has(role , account )) */\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n        /* \"Contracts/Access/Roles.sol\":530:535  false */\n      0x00\n        /* \"Contracts/Access/Roles.sol\":508:512  role */\n      dup3\n        /* \"Contracts/Access/Roles.sol\":508:519  role.bearer */\n      0x00\n      add\n        /* \"Contracts/Access/Roles.sol\":508:528  role.bearer[account] */\n      0x00\n        /* \"Contracts/Access/Roles.sol\":520:527  account */\n      dup4\n        /* \"Contracts/Access/Roles.sol\":508:528  role.bearer[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Contracts/Access/Roles.sol\":508:535  role.bearer[account]= false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Contracts/Access/Roles.sol\":351:545  function remove(Role storage role , address account) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_50:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_52:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_53:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_64\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_52\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_54:\n        /* \"#utility.yul\":641:665   */\n      tag_66\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_53\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_67\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_67:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_55:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_69\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_54\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_8:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_71\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_72\n      tag_50\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":917:1036   */\n    tag_71:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_73\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_55\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1266   */\n    tag_56:\n        /* \"#utility.yul\":1210:1217   */\n      0x00\n        /* \"#utility.yul\":1253:1258   */\n      dup2\n        /* \"#utility.yul\":1246:1259   */\n      iszero\n        /* \"#utility.yul\":1239:1260   */\n      iszero\n        /* \"#utility.yul\":1228:1260   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1272:1381   */\n    tag_57:\n        /* \"#utility.yul\":1353:1374   */\n      tag_76\n        /* \"#utility.yul\":1368:1373   */\n      dup2\n        /* \"#utility.yul\":1353:1374   */\n      tag_56\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1348:1351   */\n      dup3\n        /* \"#utility.yul\":1341:1375   */\n      mstore\n        /* \"#utility.yul\":1272:1381   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1597   */\n    tag_11:\n        /* \"#utility.yul\":1474:1478   */\n      0x00\n        /* \"#utility.yul\":1512:1514   */\n      0x20\n        /* \"#utility.yul\":1501:1510   */\n      dup3\n        /* \"#utility.yul\":1497:1515   */\n      add\n        /* \"#utility.yul\":1489:1515   */\n      swap1\n      pop\n        /* \"#utility.yul\":1525:1590   */\n      tag_78\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1576:1585   */\n      dup4\n        /* \"#utility.yul\":1572:1589   */\n      add\n        /* \"#utility.yul\":1563:1569   */\n      dup5\n        /* \"#utility.yul\":1525:1590   */\n      tag_57\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1387:1597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209fd215cd386093240376c0956f6d265dc5f761b27d538df77a11470cdf81f0b864736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_29": {
									"entryPoint": null,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_addRetailer_90": {
									"entryPoint": 58,
									"id": 90,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_220": {
									"entryPoint": 50,
									"id": 220,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@add_149": {
									"entryPoint": 148,
									"id": 149,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@has_208": {
									"entryPoint": 325,
									"id": 208,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6101d6565b600033905090565b61004e81600061009460201b90919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f71ae26cad02663e3d92efd6ec56031a80d74a20c0ab4183faa8bf262261c9baa60405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100cd57600080fd5b6100dd828261014560201b60201c565b156100e757600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361017f57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61048e806101e56000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80635da09b88146100465780638ec4f50514610076578063e34d7a0714610092575b600080fd5b610060600480360381019061005b91906103f5565b61009c565b60405161006d919061043d565b60405180910390f35b610090600480360381019061008b91906103f5565b6100b9565b005b61009a6100de565b005b60006100b28260006100f090919063ffffffff16565b9050919050565b6100c96100c4610181565b61009c565b6100d257600080fd5b6100db81610189565b50565b6100ee6100e9610181565b6101e3565b565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361012a57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b61019d81600061023d90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f71ae26cad02663e3d92efd6ec56031a80d74a20c0ab4183faa8bf262261c9baa60405160405180910390a250565b6101f78160006102e890919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fdb7176e79cffef81cb01767dd0447a0b24bb72ca9778d4b245581086b2a7e6db60405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361027657600080fd5b61028082826100f0565b1561028a57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361032157600080fd5b61032b82826100f0565b61033457600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103c282610397565b9050919050565b6103d2816103b7565b81146103dd57600080fd5b50565b6000813590506103ef816103c9565b92915050565b60006020828403121561040b5761040a610392565b5b6000610419848285016103e0565b91505092915050565b60008115159050919050565b61043781610422565b82525050565b6000602082019050610452600083018461042e565b9291505056fea26469706673582212209fd215cd386093240376c0956f6d265dc5f761b27d538df77a11470cdf81f0b864736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1D6 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4E DUP2 PUSH1 0x0 PUSH2 0x94 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x71AE26CAD02663E3D92EFD6EC56031A80D74A20C0AB4183FAA8BF262261C9BAA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDD DUP3 DUP3 PUSH2 0x145 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x48E DUP1 PUSH2 0x1E5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5DA09B88 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8EC4F505 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xE34D7A07 EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0xB9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9A PUSH2 0xDE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0xB2 DUP3 PUSH1 0x0 PUSH2 0xF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC9 PUSH2 0xC4 PUSH2 0x181 JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST PUSH2 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDB DUP2 PUSH2 0x189 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xEE PUSH2 0xE9 PUSH2 0x181 JUMP JUMPDEST PUSH2 0x1E3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x19D DUP2 PUSH1 0x0 PUSH2 0x23D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x71AE26CAD02663E3D92EFD6EC56031A80D74A20C0AB4183FAA8BF262261C9BAA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1F7 DUP2 PUSH1 0x0 PUSH2 0x2E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDB7176E79CFFEF81CB01767DD0447A0B24BB72CA9778D4B245581086B2A7E6DB PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x280 DUP3 DUP3 PUSH2 0xF0 JUMP JUMPDEST ISZERO PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x32B DUP3 DUP3 PUSH2 0xF0 JUMP JUMPDEST PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C2 DUP3 PUSH2 0x397 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D2 DUP2 PUSH2 0x3B7 JUMP JUMPDEST DUP2 EQ PUSH2 0x3DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3EF DUP2 PUSH2 0x3C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40B JUMPI PUSH2 0x40A PUSH2 0x392 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x419 DUP5 DUP3 DUP6 ADD PUSH2 0x3E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x437 DUP2 PUSH2 0x422 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x452 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x42E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 0xD2 ISZERO 0xCD CODESIZE PUSH1 0x93 0x24 SUB PUSH23 0xC0956F6D265DC5F761B27D538DF77A11470CDF81F0B864 PUSH20 0x6F6C634300081300330000000000000000000000 ",
							"sourceMap": "121:1157:0:-:0;;;349:59;;;;;;;;;;373:26;386:12;:10;;;:12;;:::i;:::-;373;;;:26;;:::i;:::-;121:1157;;97:98:2;150:7;177:10;170:17;;97:98;:::o;993:129:0:-;1054:22;1068:7;1054:9;:13;;;;:22;;;;:::i;:::-;1106:7;1092:22;;;;;;;;;;;;993:129;:::o;153:191:1:-;252:1;233:21;;:7;:21;;;223:33;;;;;;276:20;280:4;287:7;276:3;;;:20;;:::i;:::-;275:21;267:30;;;;;;330:4;308;:11;;:20;320:7;308:20;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;153:191;;:::o;552:172::-;626:4;671:1;652:21;;:7;:21;;;644:30;;;;;;693:4;:11;;:20;705:7;693:20;;;;;;;;;;;;;;;;;;;;;;;;;686:27;;552:172;;;;:::o;121:1157:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_addRetailer_90": {
									"entryPoint": 393,
									"id": 90,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_220": {
									"entryPoint": 385,
									"id": 220,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_removeRetailer_106": {
									"entryPoint": 483,
									"id": 106,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addRetailer_65": {
									"entryPoint": 185,
									"id": 65,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_149": {
									"entryPoint": 573,
									"id": 149,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@has_208": {
									"entryPoint": 240,
									"id": 208,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isRetailer_53": {
									"entryPoint": 156,
									"id": 53,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@remove_183": {
									"entryPoint": 744,
									"id": 183,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renouceRetailer_74": {
									"entryPoint": 222,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1070,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 914,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1600:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:3",
														"type": ""
													}
												],
												"src": "696:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:3"
															},
															"nodeType": "YulIf",
															"src": "917:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:3",
														"type": ""
													}
												],
												"src": "841:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1218:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1228:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1253:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1246:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1246:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1228:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1200:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1210:7:3",
														"type": ""
													}
												],
												"src": "1176:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1331:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1348:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1368:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1353:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1353:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1341:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1341:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1341:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1319:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1326:3:3",
														"type": ""
													}
												],
												"src": "1272:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1479:118:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1489:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1501:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1512:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1497:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1497:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1489:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1563:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1576:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1587:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1572:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1572:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1525:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1525:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1525:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1451:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1463:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1474:4:3",
														"type": ""
													}
												],
												"src": "1387:210:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80635da09b88146100465780638ec4f50514610076578063e34d7a0714610092575b600080fd5b610060600480360381019061005b91906103f5565b61009c565b60405161006d919061043d565b60405180910390f35b610090600480360381019061008b91906103f5565b6100b9565b005b61009a6100de565b005b60006100b28260006100f090919063ffffffff16565b9050919050565b6100c96100c4610181565b61009c565b6100d257600080fd5b6100db81610189565b50565b6100ee6100e9610181565b6101e3565b565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361012a57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b61019d81600061023d90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f71ae26cad02663e3d92efd6ec56031a80d74a20c0ab4183faa8bf262261c9baa60405160405180910390a250565b6101f78160006102e890919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fdb7176e79cffef81cb01767dd0447a0b24bb72ca9778d4b245581086b2a7e6db60405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361027657600080fd5b61028082826100f0565b1561028a57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361032157600080fd5b61032b82826100f0565b61033457600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103c282610397565b9050919050565b6103d2816103b7565b81146103dd57600080fd5b50565b6000813590506103ef816103c9565b92915050565b60006020828403121561040b5761040a610392565b5b6000610419848285016103e0565b91505092915050565b60008115159050919050565b61043781610422565b82525050565b6000602082019050610452600083018461042e565b9291505056fea26469706673582212209fd215cd386093240376c0956f6d265dc5f761b27d538df77a11470cdf81f0b864736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5DA09B88 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8EC4F505 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xE34D7A07 EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0xB9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9A PUSH2 0xDE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0xB2 DUP3 PUSH1 0x0 PUSH2 0xF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC9 PUSH2 0xC4 PUSH2 0x181 JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST PUSH2 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDB DUP2 PUSH2 0x189 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xEE PUSH2 0xE9 PUSH2 0x181 JUMP JUMPDEST PUSH2 0x1E3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x19D DUP2 PUSH1 0x0 PUSH2 0x23D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x71AE26CAD02663E3D92EFD6EC56031A80D74A20C0AB4183FAA8BF262261C9BAA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1F7 DUP2 PUSH1 0x0 PUSH2 0x2E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDB7176E79CFFEF81CB01767DD0447A0B24BB72CA9778D4B245581086B2A7E6DB PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x280 DUP3 DUP3 PUSH2 0xF0 JUMP JUMPDEST ISZERO PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x32B DUP3 DUP3 PUSH2 0xF0 JUMP JUMPDEST PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C2 DUP3 PUSH2 0x397 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D2 DUP2 PUSH2 0x3B7 JUMP JUMPDEST DUP2 EQ PUSH2 0x3DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3EF DUP2 PUSH2 0x3C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40B JUMPI PUSH2 0x40A PUSH2 0x392 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x419 DUP5 DUP3 DUP6 ADD PUSH2 0x3E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x437 DUP2 PUSH2 0x422 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x452 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x42E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 0xD2 ISZERO 0xCD CODESIZE PUSH1 0x93 0x24 SUB PUSH23 0xC0956F6D265DC5F761B27D538DF77A11470CDF81F0B864 PUSH20 0x6F6C634300081300330000000000000000000000 ",
							"sourceMap": "121:1157:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;646:129;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;787:98;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;893:92;;;:::i;:::-;;646:129;722:4;745:22;759:7;745:9;:13;;:22;;;;:::i;:::-;738:29;;646:129;;;:::o;787:98::-;534:24;545:12;:10;:12::i;:::-;534:10;:24::i;:::-;526:33;;;;;;856:21:::1;869:7;856:12;:21::i;:::-;787:98:::0;:::o;893:92::-;948:29;964:12;:10;:12::i;:::-;948:15;:29::i;:::-;893:92::o;552:172:1:-;626:4;671:1;652:21;;:7;:21;;;644:30;;;;;;693:4;:11;;:20;705:7;693:20;;;;;;;;;;;;;;;;;;;;;;;;;686:27;;552:172;;;;:::o;97:98:2:-;150:7;177:10;170:17;;97:98;:::o;993:129:0:-;1054:22;1068:7;1054:9;:13;;:22;;;;:::i;:::-;1106:7;1092:22;;;;;;;;;;;;993:129;:::o;1134:137::-;1197:25;1214:7;1197:9;:16;;:25;;;;:::i;:::-;1254:7;1238:25;;;;;;;;;;;;1134:137;:::o;153:191:1:-;252:1;233:21;;:7;:21;;;223:33;;;;;;276:20;280:4;287:7;276:3;:20::i;:::-;275:21;267:30;;;;;;330:4;308;:11;;:20;320:7;308:20;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;153:191;;:::o;351:194::-;453:1;434:21;;:7;:21;;;424:33;;;;;;476:20;480:4;487:7;476:3;:20::i;:::-;468:29;;;;;;530:5;508:4;:11;;:20;520:7;508:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;351:194;;:::o;88:117:3:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:109::-;1353:21;1368:5;1353:21;:::i;:::-;1348:3;1341:34;1272:109;;:::o;1387:210::-;1474:4;1512:2;1501:9;1497:18;1489:26;;1525:65;1587:1;1576:9;1572:17;1563:6;1525:65;:::i;:::-;1387:210;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "233200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addRetailer(address)": "infinite",
								"isRetailer(address)": "infinite",
								"renouceRetailer()": "infinite"
							},
							"internal": {
								"_addRetailer(address)": "infinite",
								"_removeRetailer(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 121,
									"end": 1278,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 121,
									"end": 1278,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 121,
									"end": 1278,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 349,
									"end": 408,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 349,
									"end": 408,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 349,
									"end": 408,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 349,
									"end": 408,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 349,
									"end": 408,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 349,
									"end": 408,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 408,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 349,
									"end": 408,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 349,
									"end": 408,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 349,
									"end": 408,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 349,
									"end": 408,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 373,
									"end": 399,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 386,
									"end": 398,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 386,
									"end": 396,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 386,
									"end": 396,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 386,
									"end": 396,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 386,
									"end": 398,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 386,
									"end": 398,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 386,
									"end": 398,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 386,
									"end": 398,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 386,
									"end": 398,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 373,
									"end": 385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 373,
									"end": 385,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 373,
									"end": 385,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 373,
									"end": 399,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 373,
									"end": 399,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 373,
									"end": 399,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 373,
									"end": 399,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 373,
									"end": 399,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 121,
									"end": 1278,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 121,
									"end": 1278,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 97,
									"end": 195,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 97,
									"end": 195,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 150,
									"end": 157,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 177,
									"end": 187,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 170,
									"end": 187,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 170,
									"end": 187,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 97,
									"end": 195,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 97,
									"end": 195,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 993,
									"end": 1122,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 993,
									"end": 1122,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1054,
									"end": 1076,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1068,
									"end": 1075,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1054,
									"end": 1063,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1054,
									"end": 1067,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1054,
									"end": 1067,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1054,
									"end": 1067,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1054,
									"end": 1067,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1054,
									"end": 1076,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1054,
									"end": 1076,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1054,
									"end": 1076,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1054,
									"end": 1076,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1054,
									"end": 1076,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1054,
									"end": 1076,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1054,
									"end": 1076,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1106,
									"end": 1113,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1114,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1092,
									"end": 1114,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1114,
									"name": "PUSH",
									"source": 0,
									"value": "71AE26CAD02663E3D92EFD6EC56031A80D74A20C0AB4183FAA8BF262261C9BAA"
								},
								{
									"begin": 1092,
									"end": 1114,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1092,
									"end": 1114,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1114,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1092,
									"end": 1114,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1114,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1114,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1114,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1114,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1092,
									"end": 1114,
									"name": "LOG2",
									"source": 0
								},
								{
									"begin": 993,
									"end": 1122,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 993,
									"end": 1122,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 153,
									"end": 344,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 153,
									"end": 344,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 252,
									"end": 253,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 254,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 233,
									"end": 254,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 233,
									"end": 240,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 233,
									"end": 254,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 233,
									"end": 254,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 233,
									"end": 254,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 223,
									"end": 256,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 223,
									"end": 256,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 223,
									"end": 256,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 223,
									"end": 256,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 223,
									"end": 256,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 223,
									"end": 256,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 223,
									"end": 256,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 276,
									"end": 296,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 280,
									"end": 284,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 287,
									"end": 294,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 276,
									"end": 279,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 276,
									"end": 279,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 276,
									"end": 279,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 276,
									"end": 296,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 276,
									"end": 296,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 276,
									"end": 296,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 276,
									"end": 296,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 276,
									"end": 296,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 275,
									"end": 296,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 267,
									"end": 297,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 267,
									"end": 297,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 267,
									"end": 297,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 297,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 267,
									"end": 297,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 267,
									"end": 297,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 267,
									"end": 297,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 330,
									"end": 334,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 308,
									"end": 312,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 308,
									"end": 319,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 308,
									"end": 319,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 308,
									"end": 328,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 320,
									"end": 327,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 308,
									"end": 328,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 308,
									"end": 328,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 308,
									"end": 328,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 308,
									"end": 328,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 308,
									"end": 328,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 308,
									"end": 328,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 308,
									"end": 328,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 308,
									"end": 328,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 308,
									"end": 328,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 308,
									"end": 328,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 308,
									"end": 328,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 308,
									"end": 328,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 308,
									"end": 328,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 308,
									"end": 328,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 308,
									"end": 328,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 308,
									"end": 328,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 308,
									"end": 334,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 308,
									"end": 334,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 308,
									"end": 334,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 308,
									"end": 334,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 308,
									"end": 334,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 308,
									"end": 334,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 308,
									"end": 334,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 308,
									"end": 334,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 308,
									"end": 334,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 308,
									"end": 334,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 308,
									"end": 334,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 308,
									"end": 334,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 308,
									"end": 334,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 308,
									"end": 334,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 308,
									"end": 334,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 308,
									"end": 334,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 308,
									"end": 334,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 308,
									"end": 334,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 153,
									"end": 344,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 153,
									"end": 344,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 153,
									"end": 344,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 552,
									"end": 724,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 552,
									"end": 724,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 626,
									"end": 630,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 671,
									"end": 672,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 652,
									"end": 673,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 652,
									"end": 673,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 652,
									"end": 659,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 652,
									"end": 673,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 652,
									"end": 673,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 652,
									"end": 673,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 644,
									"end": 674,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 644,
									"end": 674,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 644,
									"end": 674,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 644,
									"end": 674,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 644,
									"end": 674,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 644,
									"end": 674,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 644,
									"end": 674,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 693,
									"end": 697,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 693,
									"end": 704,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 693,
									"end": 704,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 693,
									"end": 713,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 705,
									"end": 712,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 693,
									"end": 713,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 693,
									"end": 713,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 693,
									"end": 713,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 693,
									"end": 713,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 693,
									"end": 713,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 693,
									"end": 713,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 693,
									"end": 713,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 693,
									"end": 713,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 693,
									"end": 713,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 693,
									"end": 713,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 693,
									"end": 713,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 693,
									"end": 713,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 693,
									"end": 713,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 693,
									"end": 713,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 693,
									"end": 713,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 693,
									"end": 713,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 693,
									"end": 713,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 693,
									"end": 713,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 693,
									"end": 713,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 693,
									"end": 713,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 693,
									"end": 713,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 693,
									"end": 713,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 693,
									"end": 713,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 693,
									"end": 713,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 693,
									"end": 713,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 686,
									"end": 713,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 686,
									"end": 713,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 552,
									"end": 724,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 552,
									"end": 724,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 552,
									"end": 724,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 552,
									"end": 724,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 552,
									"end": 724,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 121,
									"end": 1278,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 121,
									"end": 1278,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 121,
									"end": 1278,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 121,
									"end": 1278,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 121,
									"end": 1278,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 121,
									"end": 1278,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 1278,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 121,
									"end": 1278,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 1278,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209fd215cd386093240376c0956f6d265dc5f761b27d538df77a11470cdf81f0b864736f6c63430008130033",
									".code": [
										{
											"begin": 121,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "5DA09B88"
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "8EC4F505"
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "E34D7A07"
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 121,
											"end": 1278,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 646,
											"end": 775,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 646,
											"end": 775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 646,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 646,
											"end": 775,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 646,
											"end": 775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 775,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 646,
											"end": 775,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 646,
											"end": 775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 646,
											"end": 775,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 646,
											"end": 775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 646,
											"end": 775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 646,
											"end": 775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 646,
											"end": 775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 646,
											"end": 775,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 646,
											"end": 775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 646,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 646,
											"end": 775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 646,
											"end": 775,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 646,
											"end": 775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 646,
											"end": 775,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 646,
											"end": 775,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 646,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 646,
											"end": 775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 646,
											"end": 775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 646,
											"end": 775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 646,
											"end": 775,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 646,
											"end": 775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 646,
											"end": 775,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 646,
											"end": 775,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 646,
											"end": 775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 646,
											"end": 775,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 646,
											"end": 775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 775,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 787,
											"end": 885,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 787,
											"end": 885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 787,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 787,
											"end": 885,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 787,
											"end": 885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 787,
											"end": 885,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 787,
											"end": 885,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 787,
											"end": 885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 787,
											"end": 885,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 787,
											"end": 885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 787,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 787,
											"end": 885,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 787,
											"end": 885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 787,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 787,
											"end": 885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 787,
											"end": 885,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 787,
											"end": 885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 787,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 787,
											"end": 885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 787,
											"end": 885,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 787,
											"end": 885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 787,
											"end": 885,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 893,
											"end": 985,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 893,
											"end": 985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 893,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 893,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 893,
											"end": 985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 893,
											"end": 985,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 893,
											"end": 985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 893,
											"end": 985,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 646,
											"end": 775,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 646,
											"end": 775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 722,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 759,
											"end": 766,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 745,
											"end": 754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 745,
											"end": 758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 745,
											"end": 767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 745,
											"end": 767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 745,
											"end": 767,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 745,
											"end": 767,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 745,
											"end": 767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 745,
											"end": 767,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 745,
											"end": 767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 738,
											"end": 767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 738,
											"end": 767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 646,
											"end": 775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 646,
											"end": 775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 646,
											"end": 775,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 646,
											"end": 775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 787,
											"end": 885,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 787,
											"end": 885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 534,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 545,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 545,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 545,
											"end": 557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 545,
											"end": 557,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 545,
											"end": 557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 534,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 534,
											"end": 558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 534,
											"end": 558,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 534,
											"end": 558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 526,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 526,
											"end": 559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 526,
											"end": 559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 526,
											"end": 559,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 526,
											"end": 559,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 526,
											"end": 559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 856,
											"end": 877,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 869,
											"end": 876,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 856,
											"end": 868,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 856,
											"end": 877,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 856,
											"end": 877,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 856,
											"end": 877,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 787,
											"end": 885,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 787,
											"end": 885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 893,
											"end": 985,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 893,
											"end": 985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 948,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 964,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 964,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 964,
											"end": 976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 964,
											"end": 976,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 964,
											"end": 976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 948,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 948,
											"end": 977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 948,
											"end": 977,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 948,
											"end": 977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 893,
											"end": 985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 552,
											"end": 724,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 552,
											"end": 724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 626,
											"end": 630,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 652,
											"end": 673,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 652,
											"end": 673,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 652,
											"end": 659,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 652,
											"end": 673,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 652,
											"end": 673,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 652,
											"end": 673,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 644,
											"end": 674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 644,
											"end": 674,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 644,
											"end": 674,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 674,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 644,
											"end": 674,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 644,
											"end": 674,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 644,
											"end": 674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 697,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 693,
											"end": 704,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 693,
											"end": 704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 693,
											"end": 713,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 705,
											"end": 712,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 693,
											"end": 713,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 693,
											"end": 713,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 693,
											"end": 713,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 693,
											"end": 713,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 693,
											"end": 713,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 693,
											"end": 713,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 693,
											"end": 713,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 693,
											"end": 713,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 693,
											"end": 713,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 693,
											"end": 713,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 693,
											"end": 713,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 693,
											"end": 713,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 693,
											"end": 713,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 693,
											"end": 713,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 693,
											"end": 713,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 693,
											"end": 713,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 693,
											"end": 713,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 693,
											"end": 713,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 693,
											"end": 713,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 693,
											"end": 713,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 693,
											"end": 713,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 693,
											"end": 713,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 693,
											"end": 713,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 693,
											"end": 713,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 693,
											"end": 713,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 686,
											"end": 713,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 713,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 552,
											"end": 724,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 552,
											"end": 724,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 552,
											"end": 724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 552,
											"end": 724,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 552,
											"end": 724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 97,
											"end": 195,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 97,
											"end": 195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 150,
											"end": 157,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 187,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 170,
											"end": 187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 170,
											"end": 187,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 97,
											"end": 195,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 97,
											"end": 195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 993,
											"end": 1122,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 993,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1054,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1068,
											"end": 1075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1054,
											"end": 1063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1054,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1054,
											"end": 1067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1054,
											"end": 1076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1054,
											"end": 1076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1054,
											"end": 1076,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1054,
											"end": 1076,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1054,
											"end": 1076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1054,
											"end": 1076,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1054,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1092,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "71AE26CAD02663E3D92EFD6EC56031A80D74A20C0AB4183FAA8BF262261C9BAA"
										},
										{
											"begin": 1092,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1092,
											"end": 1114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1092,
											"end": 1114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1114,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1092,
											"end": 1114,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 993,
											"end": 1122,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 993,
											"end": 1122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1134,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1214,
											"end": 1221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1197,
											"end": 1213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1222,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1222,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1197,
											"end": 1222,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1222,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1197,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1254,
											"end": 1261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1263,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1238,
											"end": 1263,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1263,
											"name": "PUSH",
											"source": 0,
											"value": "DB7176E79CFFEF81CB01767DD0447A0B24BB72CA9778D4B245581086B2A7E6DB"
										},
										{
											"begin": 1238,
											"end": 1263,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1238,
											"end": 1263,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1263,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1238,
											"end": 1263,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1263,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1238,
											"end": 1263,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 153,
											"end": 344,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 153,
											"end": 344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 252,
											"end": 253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 254,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 233,
											"end": 254,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 233,
											"end": 240,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 233,
											"end": 254,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 233,
											"end": 254,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 233,
											"end": 254,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 223,
											"end": 256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 223,
											"end": 256,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 223,
											"end": 256,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 223,
											"end": 256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 223,
											"end": 256,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 223,
											"end": 256,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 223,
											"end": 256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 276,
											"end": 296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 280,
											"end": 284,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 287,
											"end": 294,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 276,
											"end": 279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 276,
											"end": 296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 276,
											"end": 296,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 276,
											"end": 296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 275,
											"end": 296,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 267,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 267,
											"end": 297,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 267,
											"end": 297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 267,
											"end": 297,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 267,
											"end": 297,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 267,
											"end": 297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 330,
											"end": 334,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 308,
											"end": 312,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 308,
											"end": 319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 319,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 308,
											"end": 328,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 320,
											"end": 327,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 308,
											"end": 328,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 308,
											"end": 328,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 308,
											"end": 328,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 308,
											"end": 328,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 308,
											"end": 328,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 308,
											"end": 328,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 308,
											"end": 328,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 308,
											"end": 328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 308,
											"end": 328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 308,
											"end": 328,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 308,
											"end": 328,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 308,
											"end": 328,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 308,
											"end": 328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 308,
											"end": 328,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 328,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 308,
											"end": 328,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 308,
											"end": 334,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 308,
											"end": 334,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 308,
											"end": 334,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 308,
											"end": 334,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 308,
											"end": 334,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 308,
											"end": 334,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 308,
											"end": 334,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 308,
											"end": 334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 308,
											"end": 334,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 308,
											"end": 334,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 308,
											"end": 334,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 308,
											"end": 334,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 308,
											"end": 334,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 308,
											"end": 334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 308,
											"end": 334,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 308,
											"end": 334,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 153,
											"end": 344,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 153,
											"end": 344,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 153,
											"end": 344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 351,
											"end": 545,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 351,
											"end": 545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 453,
											"end": 454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 434,
											"end": 455,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 434,
											"end": 455,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 434,
											"end": 441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 434,
											"end": 455,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 434,
											"end": 455,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 434,
											"end": 455,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 424,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 424,
											"end": 457,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 424,
											"end": 457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 457,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 424,
											"end": 457,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 424,
											"end": 457,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 424,
											"end": 457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 476,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 480,
											"end": 484,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 487,
											"end": 494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 476,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 476,
											"end": 496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 476,
											"end": 496,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 476,
											"end": 496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 468,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 468,
											"end": 497,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 468,
											"end": 497,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 468,
											"end": 497,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 468,
											"end": 497,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 468,
											"end": 497,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 468,
											"end": 497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 530,
											"end": 535,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 508,
											"end": 512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 508,
											"end": 519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 508,
											"end": 519,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 508,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 508,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 508,
											"end": 528,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 508,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 508,
											"end": 528,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 508,
											"end": 528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 508,
											"end": 528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 508,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 508,
											"end": 528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 508,
											"end": 528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 508,
											"end": 528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 508,
											"end": 528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 508,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 508,
											"end": 528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 508,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 508,
											"end": 528,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 508,
											"end": 528,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 508,
											"end": 535,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 508,
											"end": 535,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 508,
											"end": 535,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 508,
											"end": 535,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 508,
											"end": 535,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 508,
											"end": 535,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 508,
											"end": 535,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 508,
											"end": 535,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 508,
											"end": 535,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 508,
											"end": 535,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 508,
											"end": 535,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 508,
											"end": 535,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 508,
											"end": 535,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 508,
											"end": 535,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 508,
											"end": 535,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 508,
											"end": 535,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 508,
											"end": 535,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 508,
											"end": 535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 351,
											"end": 545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 351,
											"end": 545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 351,
											"end": 545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1258,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1246,
											"end": 1259,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1260,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1368,
											"end": 1373,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1353,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1341,
											"end": 1375,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1474,
											"end": 1478,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1514,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1497,
											"end": 1515,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1585,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1572,
											"end": 1589,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1569,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1525,
											"end": 1590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"Contracts/Access/Retailer.sol",
								"Contracts/Access/Roles.sol",
								"Contracts/Utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addRetailer(address)": "8ec4f505",
							"isRetailer(address)": "5da09b88",
							"renouceRetailer()": "e34d7a07"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"RetailerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"RetailerRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addRetailer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isRetailer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renouceRetailer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/Access/Retailer.sol\":\"Retailer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/Access/Retailer.sol\":{\"keccak256\":\"0x16ccbc0471e98199237ff831b7b1dba9ca704284c919a6443aea7c73c86fe43a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b8b0e7fa7f6d6482c3e0b09a90a0ddafad7638fa132a0f83edd909dcef2a6272\",\"dweb:/ipfs/QmTVEpkbya8MJAbTWXrZvpunTk7LUKaiha1onFVF1uhTEC\"]},\"Contracts/Access/Roles.sol\":{\"keccak256\":\"0xdfd92f0594fd9047291cd7f41db788ef52aa8ea6f2495f7412845d78ea970641\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e44051bb42e54a20e11fb5c0fa07e0c15a7c806b06b489ce5e3c1af6daa0c260\",\"dweb:/ipfs/QmRW9BZW9EpFW4Y7eWLdC7U8ukBKbWHjWjcLCDsghnLrA9\"]},\"Contracts/Utils/Context.sol\":{\"keccak256\":\"0x34749fd4e06e5922f373753c49efaee4404ff717d9a4c570725352901b10ec78\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8a3a68e3788b4d9e8a148e7e8dd10dd4154d0be0a9e0acb67803d9b99a3b730e\",\"dweb:/ipfs/QmR7uVeH35ijykVCgiWT57KkiLkvs2P6ScovMSmYBX6QUf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 20,
								"contract": "Contracts/Access/Retailer.sol:Retailer",
								"label": "retailers",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(Role)114_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_struct(Role)114_storage": {
								"encoding": "inplace",
								"label": "struct Roles.Role",
								"members": [
									{
										"astId": 113,
										"contract": "Contracts/Access/Retailer.sol:Retailer",
										"label": "bearer",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									}
								],
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Contracts/Access/Roles.sol": {
				"Roles": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Contracts/Access/Roles.sol\":66:735  library Roles {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contracts/Access/Roles.sol\":66:735  library Roles {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e3cefdad94c5876f34165292e1157b48909ec9ca543ddd79cfa38e6df6d49fc264736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e3cefdad94c5876f34165292e1157b48909ec9ca543ddd79cfa38e6df6d49fc264736f6c63430008130033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 0xCE REVERT 0xAD SWAP5 0xC5 DUP8 PUSH16 0x34165292E1157B48909EC9CA543DDD79 0xCF LOG3 DUP15 PUSH14 0xF6D49FC264736F6C634300081300 CALLER ",
							"sourceMap": "66:669:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e3cefdad94c5876f34165292e1157b48909ec9ca543ddd79cfa38e6df6d49fc264736f6c63430008130033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 0xCE REVERT 0xAD SWAP5 0xC5 DUP8 PUSH16 0x34165292E1157B48909EC9CA543DDD79 0xCF LOG3 DUP15 PUSH14 0xF6D49FC264736F6C634300081300 CALLER ",
							"sourceMap": "66:669:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(struct Roles.Role storage pointer,address)": "infinite",
								"has(struct Roles.Role storage pointer,address)": "infinite",
								"remove(struct Roles.Role storage pointer,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 66,
									"end": 735,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 735,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 735,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 66,
									"end": 735,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 66,
									"end": 735,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 66,
									"end": 735,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 66,
									"end": 735,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 66,
									"end": 735,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 66,
									"end": 735,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 66,
									"end": 735,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 735,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 66,
									"end": 735,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 66,
									"end": 735,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 66,
									"end": 735,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 735,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 66,
									"end": 735,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 735,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 735,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 66,
									"end": 735,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 735,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 66,
									"end": 735,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 66,
									"end": 735,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 66,
									"end": 735,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 735,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 66,
									"end": 735,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 735,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 66,
									"end": 735,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 66,
									"end": 735,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 735,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 66,
									"end": 735,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 66,
									"end": 735,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 66,
									"end": 735,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 66,
									"end": 735,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 66,
									"end": 735,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 66,
									"end": 735,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e3cefdad94c5876f34165292e1157b48909ec9ca543ddd79cfa38e6df6d49fc264736f6c63430008130033",
									".code": [
										{
											"begin": 66,
											"end": 735,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 66,
											"end": 735,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 66,
											"end": 735,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 66,
											"end": 735,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 66,
											"end": 735,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 66,
											"end": 735,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 66,
											"end": 735,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 735,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 66,
											"end": 735,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"Contracts/Access/Retailer.sol",
								"Contracts/Access/Roles.sol",
								"Contracts/Utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/Access/Roles.sol\":\"Roles\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/Access/Roles.sol\":{\"keccak256\":\"0xdfd92f0594fd9047291cd7f41db788ef52aa8ea6f2495f7412845d78ea970641\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e44051bb42e54a20e11fb5c0fa07e0c15a7c806b06b489ce5e3c1af6daa0c260\",\"dweb:/ipfs/QmRW9BZW9EpFW4Y7eWLdC7U8ukBKbWHjWjcLCDsghnLrA9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Contracts/Utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/Utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/Utils/Context.sol\":{\"keccak256\":\"0x34749fd4e06e5922f373753c49efaee4404ff717d9a4c570725352901b10ec78\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8a3a68e3788b4d9e8a148e7e8dd10dd4154d0be0a9e0acb67803d9b99a3b730e\",\"dweb:/ipfs/QmR7uVeH35ijykVCgiWT57KkiLkvs2P6ScovMSmYBX6QUf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Contracts/Access/Retailer.sol": {
				"ast": {
					"absolutePath": "Contracts/Access/Retailer.sol",
					"exportedSymbols": {
						"Context": [
							230
						],
						"Retailer": [
							107
						],
						"Roles": [
							209
						]
					},
					"id": 108,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:0"
						},
						{
							"absolutePath": "Contracts/Access/Roles.sol",
							"file": "./Roles.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 108,
							"sourceUnit": 210,
							"src": "64:21:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Contracts/Utils/Context.sol",
							"file": "../Utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 108,
							"sourceUnit": 231,
							"src": "87:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"142:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 230,
										"src": "142:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "142:7:0"
								}
							],
							"canonicalName": "Retailer",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 107,
							"linearizedBaseContracts": [
								107,
								230
							],
							"name": "Retailer",
							"nameLocation": "130:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 9,
									"libraryName": {
										"id": 6,
										"name": "Roles",
										"nameLocations": [
											"165:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 209,
										"src": "165:5:0"
									},
									"nodeType": "UsingForDirective",
									"src": "159:27:0",
									"typeName": {
										"id": 8,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 7,
											"name": "Roles.Role",
											"nameLocations": [
												"175:5:0",
												"181:4:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 114,
											"src": "175:10:0"
										},
										"referencedDeclaration": 114,
										"src": "175:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Role_$114_storage_ptr",
											"typeString": "struct Roles.Role"
										}
									}
								},
								{
									"anonymous": false,
									"eventSelector": "71ae26cad02663e3d92efd6ec56031a80d74a20c0ab4183faa8bf262261c9baa",
									"id": 13,
									"name": "RetailerAdded",
									"nameLocation": "203:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "233:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "217:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "217:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "216:26:0"
									},
									"src": "197:46:0"
								},
								{
									"anonymous": false,
									"eventSelector": "db7176e79cffef81cb01767dd0447a0b24bb72ca9778d4b245581086b2a7e6db",
									"id": 17,
									"name": "RetailerRemoved",
									"nameLocation": "254:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "286:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "270:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "270:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "269:26:0"
									},
									"src": "248:48:0"
								},
								{
									"constant": false,
									"id": 20,
									"mutability": "mutable",
									"name": "retailers",
									"nameLocation": "322:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 107,
									"src": "303:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Role_$114_storage",
										"typeString": "struct Roles.Role"
									},
									"typeName": {
										"id": 19,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 18,
											"name": "Roles.Role",
											"nameLocations": [
												"303:5:0",
												"309:4:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 114,
											"src": "303:10:0"
										},
										"referencedDeclaration": 114,
										"src": "303:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Role_$114_storage_ptr",
											"typeString": "struct Roles.Role"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "363:45:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 24,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "386:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "386:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 23,
														"name": "_addRetailer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "373:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "373:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "373:26:0"
											}
										]
									},
									"id": 29,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "360:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "363:0:0"
									},
									"scope": 107,
									"src": "349:59:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "516:61:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 33,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "545:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 34,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "545:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 32,
																"name": "isRetailer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 53,
																"src": "534:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "534:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 31,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "526:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "526:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "526:33:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "569:1:0"
											}
										]
									},
									"id": 40,
									"name": "onlyRetailer",
									"nameLocation": "503:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "516:0:0"
									},
									"src": "494:83:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "727:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 49,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "759:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 47,
															"name": "retailers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "745:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$114_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 48,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "755:3:0",
														"memberName": "has",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 208,
														"src": "745:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$114_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_Role_$114_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "745:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 46,
												"id": 51,
												"nodeType": "Return",
												"src": "738:29:0"
											}
										]
									},
									"functionSelector": "5da09b88",
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isRetailer",
									"nameLocation": "655:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "666:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "666:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "665:18:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "722:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 44,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "722:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "721:6:0"
									},
									"scope": 107,
									"src": "646:129:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "845:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 61,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "869:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_addRetailer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "856:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "856:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "856:21:0"
											}
										]
									},
									"functionSelector": "8ec4f505",
									"id": 65,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyRetailer",
												"nameLocations": [
													"833:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "833:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "833:12:0"
										}
									],
									"name": "addRetailer",
									"nameLocation": "796:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "817:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "809:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "809:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:17:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "845:0:0"
									},
									"scope": 107,
									"src": "787:98:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "927:58:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 69,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "964:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "964:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 68,
														"name": "_removeRetailer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "948:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "948:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "948:29:0"
											}
										]
									},
									"functionSelector": "e34d7a07",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renouceRetailer",
									"nameLocation": "903:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "918:2:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "927:0:0"
									},
									"scope": 107,
									"src": "893:92:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "1043:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 82,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "1068:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 79,
															"name": "retailers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "1054:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$114_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 81,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1064:3:0",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 149,
														"src": "1054:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$114_storage_ptr_$_t_address_$returns$__$attached_to$_t_struct$_Role_$114_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address)"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1054:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "1054:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 86,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "1106:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 85,
														"name": "RetailerAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "1092:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1092:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 88,
												"nodeType": "EmitStatement",
												"src": "1087:27:0"
											}
										]
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addRetailer",
									"nameLocation": "1002:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1025:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1017:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1017:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1016:18:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1043:0:0"
									},
									"scope": 107,
									"src": "993:129:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "1186:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 98,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "1214:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 95,
															"name": "retailers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "1197:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$114_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 97,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1207:6:0",
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 183,
														"src": "1197:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$114_storage_ptr_$_t_address_$returns$__$attached_to$_t_struct$_Role_$114_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1197:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "1197:25:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 102,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "1254:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 101,
														"name": "RetailerRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "1238:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1238:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "EmitStatement",
												"src": "1233:30:0"
											}
										]
									},
									"id": 106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeRetailer",
									"nameLocation": "1143:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1167:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1159:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1159:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1158:18:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1186:0:0"
									},
									"scope": 107,
									"src": "1134:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 108,
							"src": "121:1157:0",
							"usedErrors": []
						}
					],
					"src": "39:1239:0"
				},
				"id": 0
			},
			"Contracts/Access/Roles.sol": {
				"ast": {
					"absolutePath": "Contracts/Access/Roles.sol",
					"exportedSymbols": {
						"Roles": [
							209
						]
					},
					"id": 210,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 109,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Roles",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 209,
							"linearizedBaseContracts": [
								209
							],
							"name": "Roles",
							"nameLocation": "74:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Roles.Role",
									"id": 114,
									"members": [
										{
											"constant": false,
											"id": 113,
											"mutability": "mutable",
											"name": "bearer",
											"nameLocation": "133:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 114,
											"src": "109:30:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 112,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "117:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "109:23:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "127:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Role",
									"nameLocation": "94:4:1",
									"nodeType": "StructDefinition",
									"scope": 209,
									"src": "87:60:1",
									"visibility": "public"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "212:132:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 123,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 119,
																		"src": "233:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 126,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "252:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "244:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 124,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "244:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "244:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "233:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 129,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "232:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "223:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "223:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "223:33:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "275:21:1",
															"subExpression": {
																"arguments": [
																	{
																		"id": 134,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 117,
																		"src": "280:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Role_$114_storage_ptr",
																			"typeString": "struct Roles.Role storage pointer"
																		}
																	},
																	{
																		"id": 135,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 119,
																		"src": "287:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Role_$114_storage_ptr",
																			"typeString": "struct Roles.Role storage pointer"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 133,
																	"name": "has",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "276:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$114_storage_ptr_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
																	}
																},
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "276:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "267:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "267:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "267:30:1"
											},
											{
												"expression": {
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 140,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "308:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Role_$114_storage_ptr",
																	"typeString": "struct Roles.Role storage pointer"
																}
															},
															"id": 143,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "313:6:1",
															"memberName": "bearer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 113,
															"src": "308:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 144,
														"indexExpression": {
															"id": 142,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "320:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "308:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "330:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "308:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "308:26:1"
											}
										]
									},
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "162:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "179:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "166:17:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$114_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"id": 116,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 115,
														"name": "Role",
														"nameLocations": [
															"166:4:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 114,
														"src": "166:4:1"
													},
													"referencedDeclaration": 114,
													"src": "166:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$114_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "194:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "186:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "186:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "165:37:1"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "212:0:1"
									},
									"scope": 209,
									"src": "153:191:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "413:132:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 158,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 154,
																		"src": "434:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 161,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "453:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "445:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 159,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "445:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "445:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "434:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 164,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "433:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 157,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "424:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "424:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 166,
												"nodeType": "ExpressionStatement",
												"src": "424:33:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 169,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "480:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Role_$114_storage_ptr",
																		"typeString": "struct Roles.Role storage pointer"
																	}
																},
																{
																	"id": 170,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 154,
																	"src": "487:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Role_$114_storage_ptr",
																		"typeString": "struct Roles.Role storage pointer"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 168,
																"name": "has",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 208,
																"src": "476:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$114_storage_ptr_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
																}
															},
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "476:20:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 167,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "468:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "468:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "468:29:1"
											},
											{
												"expression": {
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 174,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "508:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Role_$114_storage_ptr",
																	"typeString": "struct Roles.Role storage pointer"
																}
															},
															"id": 177,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "513:6:1",
															"memberName": "bearer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 113,
															"src": "508:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 178,
														"indexExpression": {
															"id": 176,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "520:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "508:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "530:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "508:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "508:27:1"
											}
										]
									},
									"id": 183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "360:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "380:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "367:17:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$114_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"id": 151,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 150,
														"name": "Role",
														"nameLocations": [
															"367:4:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 114,
														"src": "367:4:1"
													},
													"referencedDeclaration": 114,
													"src": "367:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$114_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "395:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "387:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:37:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "413:0:1"
									},
									"scope": 209,
									"src": "351:194:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "632:92:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 194,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 188,
																"src": "652:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "671:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "663:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 195,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "663:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "663:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "652:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 193,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "644:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "644:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "644:30:1"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 202,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "693:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$114_storage_ptr",
																"typeString": "struct Roles.Role storage pointer"
															}
														},
														"id": 203,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "698:6:1",
														"memberName": "bearer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 113,
														"src": "693:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 205,
													"indexExpression": {
														"id": 204,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "705:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "693:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 192,
												"id": 206,
												"nodeType": "Return",
												"src": "686:27:1"
											}
										]
									},
									"id": 208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "has",
									"nameLocation": "561:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "578:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "565:17:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$114_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"id": 185,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 184,
														"name": "Role",
														"nameLocations": [
															"565:4:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 114,
														"src": "565:4:1"
													},
													"referencedDeclaration": 114,
													"src": "565:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$114_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "593:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "585:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "585:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:38:1"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "626:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 190,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "626:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "625:6:1"
									},
									"scope": 209,
									"src": "552:172:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 210,
							"src": "66:669:1",
							"usedErrors": []
						}
					],
					"src": "39:696:1"
				},
				"id": 1
			},
			"Contracts/Utils/Context.sol": {
				"ast": {
					"absolutePath": "Contracts/Utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							230
						]
					},
					"id": 231,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 211,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 230,
							"linearizedBaseContracts": [
								230
							],
							"name": "Context",
							"nameLocation": "82:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "159:36:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 216,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "177:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "181:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "177:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 215,
												"id": 218,
												"nodeType": "Return",
												"src": "170:17:2"
											}
										]
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "106:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "116:2:2"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "150:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "150:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "149:9:2"
									},
									"scope": 230,
									"src": "97:98:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "270:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 225,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "288:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "292:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "288:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 224,
												"id": 227,
												"nodeType": "Return",
												"src": "281:15:2"
											}
										]
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "220:2:2"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "254:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "254:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:16:2"
									},
									"scope": 230,
									"src": "203:101:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 231,
							"src": "64:243:2",
							"usedErrors": []
						}
					],
					"src": "39:268:2"
				},
				"id": 2
			}
		}
	}
}